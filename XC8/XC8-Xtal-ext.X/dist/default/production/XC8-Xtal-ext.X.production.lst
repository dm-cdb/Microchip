

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Oct 13 21:51:36 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	12F683
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16     0000                     
    17                           ; Version 2.40
    18                           ; Generated 06/12/2021 GMT
    19                           ; 
    20                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC12F683 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52     0000                     	;# 
    53     0001                     	;# 
    54     0002                     	;# 
    55     0003                     	;# 
    56     0004                     	;# 
    57     0005                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     000C                     	;# 
    61     000E                     	;# 
    62     000E                     	;# 
    63     000F                     	;# 
    64     0010                     	;# 
    65     0011                     	;# 
    66     0012                     	;# 
    67     0013                     	;# 
    68     0013                     	;# 
    69     0014                     	;# 
    70     0015                     	;# 
    71     0018                     	;# 
    72     0019                     	;# 
    73     001A                     	;# 
    74     001E                     	;# 
    75     001F                     	;# 
    76     0081                     	;# 
    77     0085                     	;# 
    78     008C                     	;# 
    79     008E                     	;# 
    80     008F                     	;# 
    81     0090                     	;# 
    82     0092                     	;# 
    83     0095                     	;# 
    84     0095                     	;# 
    85     0096                     	;# 
    86     0096                     	;# 
    87     0099                     	;# 
    88     009A                     	;# 
    89     009A                     	;# 
    90     009B                     	;# 
    91     009C                     	;# 
    92     009D                     	;# 
    93     009E                     	;# 
    94     009F                     	;# 
    95     0000                     	;# 
    96     0001                     	;# 
    97     0002                     	;# 
    98     0003                     	;# 
    99     0004                     	;# 
   100     0005                     	;# 
   101     000A                     	;# 
   102     000B                     	;# 
   103     000C                     	;# 
   104     000E                     	;# 
   105     000E                     	;# 
   106     000F                     	;# 
   107     0010                     	;# 
   108     0011                     	;# 
   109     0012                     	;# 
   110     0013                     	;# 
   111     0013                     	;# 
   112     0014                     	;# 
   113     0015                     	;# 
   114     0018                     	;# 
   115     0019                     	;# 
   116     001A                     	;# 
   117     001E                     	;# 
   118     001F                     	;# 
   119     0081                     	;# 
   120     0085                     	;# 
   121     008C                     	;# 
   122     008E                     	;# 
   123     008F                     	;# 
   124     0090                     	;# 
   125     0092                     	;# 
   126     0095                     	;# 
   127     0095                     	;# 
   128     0096                     	;# 
   129     0096                     	;# 
   130     0099                     	;# 
   131     009A                     	;# 
   132     009A                     	;# 
   133     009B                     	;# 
   134     009C                     	;# 
   135     009D                     	;# 
   136     009E                     	;# 
   137     009F                     	;# 
   138                           
   139                           	psect	nvCOMMON
   140     0076                     __pnvCOMMON:
   141     0076                     _counter:
   142     0076                     	ds	1
   143     0005                     _GPIObits	set	5
   144     000B                     _INTCONbits	set	11
   145     0018                     _WDTCONbits	set	24
   146     0019                     _CMCON0	set	25
   147     0005                     _GPIO	set	5
   148     000C                     _PIR1bits	set	12
   149     009F                     _ANSEL	set	159
   150     0085                     _TRISIO	set	133
   151     008F                     _OSCCONbits	set	143
   152     008C                     _PIE1bits	set	140
   153                           
   154                           	psect	cinit
   155     000B                     start_initialization:	
   156                           ; #config settings
   157                           
   158     000B                     __initialization:
   159                           
   160                           ; Clear objects allocated to BITCOMMON
   161     000B  01F7               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   162                           
   163                           ; Clear objects allocated to COMMON
   164     000C  01F8               	clrf	__pbssCOMMON& (0+127)
   165     000D                     end_of_initialization:	
   166                           ;End of C runtime variable initialization code
   167                           
   168     000D                     __end_of__initialization:
   169     000D  0183               	clrf	3
   170     000E  280F               	ljmp	_main	;jump to C main() function
   171                           
   172                           	psect	bitbssCOMMON
   173     03B8                     __pbitbssCOMMON:
   174     03B8                     _FAILFLAG:
   175     03B8                     	ds	1
   176                           
   177                           	psect	bssCOMMON
   178     0078                     __pbssCOMMON:
   179     0078                     _retry:
   180     0078                     	ds	1
   181                           
   182                           	psect	cstackCOMMON
   183     0070                     __pcstackCOMMON:
   184     0070                     ?_isr:
   185     0070                     ??_isr:	
   186                           ; 1 bytes @ 0x0
   187                           
   188     0070                     ?_PicInit:	
   189                           ; 1 bytes @ 0x0
   190                           
   191     0070                     ?_main:	
   192                           ; 1 bytes @ 0x0
   193                           
   194                           
   195                           ; 1 bytes @ 0x0
   196     0070                     	ds	2
   197     0072                     ??_PicInit:
   198     0072                     ??_main:	
   199                           ; 1 bytes @ 0x2
   200                           
   201                           
   202                           ; 1 bytes @ 0x2
   203     0072                     	ds	3
   204     0075                     main@i:
   205                           
   206                           ; 1 bytes @ 0x5
   207     0075                     	ds	1
   208                           
   209                           	psect	maintext
   210     000F                     __pmaintext:	
   211 ;;
   212 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   213 ;;
   214 ;; *************** function _main *****************
   215 ;; Defined at:
   216 ;;		line 57 in file "Main.c"
   217 ;; Parameters:    Size  Location     Type
   218 ;;		None
   219 ;; Auto vars:     Size  Location     Type
   220 ;;  i               1    5[COMMON] unsigned char 
   221 ;; Return value:  Size  Location     Type
   222 ;;                  1    wreg      void 
   223 ;; Registers used:
   224 ;;		wreg, status,2, status,0, pclath, cstack
   225 ;; Tracked objects:
   226 ;;		On entry : B00/0
   227 ;;		On exit  : 0/0
   228 ;;		Unchanged: 0/0
   229 ;; Data sizes:     COMMON   BANK0   BANK1
   230 ;;      Params:         0       0       0
   231 ;;      Locals:         1       0       0
   232 ;;      Temps:          3       0       0
   233 ;;      Totals:         4       0       0
   234 ;;Total ram usage:        4 bytes
   235 ;; Hardware stack levels required when called: 2
   236 ;; This function calls:
   237 ;;		_PicInit
   238 ;; This function is called by:
   239 ;;		Startup code after reset
   240 ;; This function uses a non-reentrant model
   241 ;;
   242                           
   243     000F                     _main:	
   244                           ;psect for function _main
   245                           
   246     000F                     l666:	
   247                           ;incstack = 0
   248                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   249                           
   250                           
   251                           ;Main.c: 59:  PicInit();
   252     000F  20ED               	fcall	_PicInit
   253     0010                     l668:
   254                           
   255                           ;Main.c: 60:  INTCONbits.PEIE = 1;
   256     0010  170B               	bsf	11,6	;volatile
   257     0011                     l670:
   258                           
   259                           ;Main.c: 61:  INTCONbits.GIE = 1;
   260     0011  178B               	bsf	11,7	;volatile
   261     0012                     l672:
   262                           
   263                           ;Main.c: 62:  counter = 25;
   264     0012  3019               	movlw	25
   265     0013  00F6               	movwf	_counter
   266     0014                     l674:
   267                           
   268                           ;Main.c: 65:     if (FAILFLAG) {
   269     0014  1C77               	btfss	_FAILFLAG/(0+8),_FAILFLAG& (0+7)
   270     0015  2817               	goto	u31
   271     0016  2818               	goto	u30
   272     0017                     u31:
   273     0017  2884               	goto	l714
   274     0018                     u30:
   275     0018                     l676:
   276                           
   277                           ;Main.c: 66:         GPIO &= 0b11111000;
   278     0018  30F8               	movlw	248
   279     0019  00F2               	movwf	??_main
   280     001A  0872               	movf	??_main,w
   281     001B  1283               	bcf	3,5	;RP0=0, select bank0
   282     001C  0585               	andwf	5,f	;volatile
   283                           
   284                           ;Main.c: 67:         while (counter){
   285     001D  283C               	goto	l684
   286     001E                     l678:
   287                           
   288                           ;Main.c: 68:             GPIObits.GP2 ^= 1;
   289     001E  1283               	bcf	3,5	;RP0=0, select bank0
   290     001F  0C05               	rrf	5,w	;volatile
   291     0020  00F2               	movwf	??_main
   292     0021  0C72               	rrf	??_main,w
   293     0022  3901               	andlw	1
   294     0023  00F2               	movwf	??_main
   295     0024  3001               	movlw	1
   296     0025  06F2               	xorwf	??_main,f
   297     0026  0DF2               	rlf	??_main,f
   298     0027  0DF2               	rlf	??_main,f
   299     0028  0805               	movf	5,w	;volatile
   300     0029  0672               	xorwf	??_main,w
   301     002A  39FB               	andlw	-5
   302     002B  0672               	xorwf	??_main,w
   303     002C  0085               	movwf	5	;volatile
   304     002D                     l680:
   305                           
   306                           ;Main.c: 69:             _delay((unsigned long)((50)*(16000000/4000.0)));
   307     002D  3002               	movlw	2
   308     002E  00F4               	movwf	??_main+2
   309     002F  3004               	movlw	4
   310     0030  00F3               	movwf	??_main+1
   311     0031  30BA               	movlw	186
   312     0032  00F2               	movwf	??_main
   313     0033                     u107:
   314     0033  0BF2               	decfsz	??_main,f
   315     0034  2833               	goto	u107
   316     0035  0BF3               	decfsz	??_main+1,f
   317     0036  2833               	goto	u107
   318     0037  0BF4               	decfsz	??_main+2,f
   319     0038  2833               	goto	u107
   320     0039  0000               	nop
   321     003A                     l682:
   322                           
   323                           ;Main.c: 70:             counter--;
   324     003A  3001               	movlw	1
   325     003B  02F6               	subwf	_counter,f
   326     003C                     l684:
   327                           
   328                           ;Main.c: 67:         while (counter){
   329     003C  0876               	movf	_counter,w
   330     003D  1D03               	btfss	3,2
   331     003E  2840               	goto	u41
   332     003F  2841               	goto	u40
   333     0040                     u41:
   334     0040  281E               	goto	l678
   335     0041                     u40:
   336     0041                     l686:
   337                           
   338                           ;Main.c: 72:     GPIO &= 0b11111000;
   339     0041  30F8               	movlw	248
   340     0042  00F2               	movwf	??_main
   341     0043  0872               	movf	??_main,w
   342     0044  1283               	bcf	3,5	;RP0=0, select bank0
   343     0045  0585               	andwf	5,f	;volatile
   344     0046                     l688:
   345                           
   346                           ;Main.c: 73:     for (unsigned char i = 0 ; i < 10 ; i++) {
   347     0046  01F5               	clrf	main@i
   348     0047                     l694:
   349                           
   350                           ;Main.c: 74:     GPIObits.GP1 ^= 1;
   351     0047  1283               	bcf	3,5	;RP0=0, select bank0
   352     0048  0C05               	rrf	5,w	;volatile
   353     0049  3901               	andlw	1
   354     004A  00F2               	movwf	??_main
   355     004B  3001               	movlw	1
   356     004C  06F2               	xorwf	??_main,f
   357     004D  0DF2               	rlf	??_main,f
   358     004E  0805               	movf	5,w	;volatile
   359     004F  0672               	xorwf	??_main,w
   360     0050  39FD               	andlw	-3
   361     0051  0672               	xorwf	??_main,w
   362     0052  0085               	movwf	5	;volatile
   363     0053                     l696:
   364                           
   365                           ;Main.c: 75:     _delay((unsigned long)((200)*(16000000/4000.0)));
   366     0053  3005               	movlw	5
   367     0054  00F4               	movwf	??_main+2
   368     0055  300F               	movlw	15
   369     0056  00F3               	movwf	??_main+1
   370     0057  30F1               	movlw	241
   371     0058  00F2               	movwf	??_main
   372     0059                     u117:
   373     0059  0BF2               	decfsz	??_main,f
   374     005A  2859               	goto	u117
   375     005B  0BF3               	decfsz	??_main+1,f
   376     005C  2859               	goto	u117
   377     005D  0BF4               	decfsz	??_main+2,f
   378     005E  2859               	goto	u117
   379     005F                     l698:
   380                           
   381                           ;Main.c: 76:     }
   382     005F  3001               	movlw	1
   383     0060  00F2               	movwf	??_main
   384     0061  0872               	movf	??_main,w
   385     0062  07F5               	addwf	main@i,f
   386     0063  300A               	movlw	10
   387     0064  0275               	subwf	main@i,w
   388     0065  1C03               	skipc
   389     0066  2868               	goto	u51
   390     0067  2869               	goto	u50
   391     0068                     u51:
   392     0068  2847               	goto	l694
   393     0069                     u50:
   394     0069                     l700:
   395                           
   396                           ;Main.c: 77:     retry ++;
   397     0069  3001               	movlw	1
   398     006A  00F2               	movwf	??_main
   399     006B  0872               	movf	??_main,w
   400     006C  07F8               	addwf	_retry,f
   401     006D                     l702:
   402                           
   403                           ;Main.c: 78:     if (retry > 4 ) {
   404     006D  3005               	movlw	5
   405     006E  0278               	subwf	_retry,w
   406     006F  1C03               	skipc
   407     0070  2872               	goto	u61
   408     0071  2873               	goto	u60
   409     0072                     u61:
   410     0072  2877               	goto	l708
   411     0073                     u60:
   412     0073                     l704:
   413                           
   414                           ;Main.c: 79:      WDTCONbits.SWDTEN = 1;
   415     0073  1283               	bcf	3,5	;RP0=0, select bank0
   416     0074  1418               	bsf	24,0	;volatile
   417     0075                     l706:
   418                           
   419                           ;Main.c: 80:      retry = 0;
   420     0075  01F8               	clrf	_retry
   421     0076  0063               	sleep	;# 
   422     0077                     l708:
   423                           
   424                           ;Main.c: 84:     OSCCONbits.SCS = 0;
   425     0077  1683               	bsf	3,5	;RP0=1, select bank1
   426     0078  100F               	bcf	15,0	;volatile
   427     0079                     l710:
   428                           
   429                           ;Main.c: 85:     _delay((unsigned long)((10)*(16000000/4000.0)));
   430     0079  3034               	movlw	52
   431     007A  00F3               	movwf	??_main+1
   432     007B  30F1               	movlw	241
   433     007C  00F2               	movwf	??_main
   434     007D                     u127:
   435     007D  0BF2               	decfsz	??_main,f
   436     007E  287D               	goto	u127
   437     007F  0BF3               	decfsz	??_main+1,f
   438     0080  287D               	goto	u127
   439     0081  2882               	nop2
   440     0082                     l712:
   441                           
   442                           ;Main.c: 86:     counter = 25;
   443     0082  3019               	movlw	25
   444     0083  00F6               	movwf	_counter
   445     0084                     l714:
   446                           
   447                           ;Main.c: 89:     if (OSCCONbits.OSTS) {
   448     0084  1683               	bsf	3,5	;RP0=1, select bank1
   449     0085  1D8F               	btfss	15,3	;volatile
   450     0086  2888               	goto	u71
   451     0087  2889               	goto	u70
   452     0088                     u71:
   453     0088  28AD               	goto	l726
   454     0089                     u70:
   455     0089                     l716:
   456                           
   457                           ;Main.c: 90:         FAILFLAG = 0;
   458     0089  1077               	bcf	_FAILFLAG/(0+8),_FAILFLAG& (0+7)
   459                           
   460                           ;Main.c: 91:         PIR1bits.OSFIF = 0;
   461     008A  1283               	bcf	3,5	;RP0=0, select bank0
   462     008B  110C               	bcf	12,2	;volatile
   463                           
   464                           ;Main.c: 92:         PIE1bits.OSFIE = 1;
   465     008C  1683               	bsf	3,5	;RP0=1, select bank1
   466     008D  150C               	bsf	12,2	;volatile
   467     008E                     l718:
   468                           
   469                           ;Main.c: 93:         GPIO &= 0b11111000;
   470     008E  30F8               	movlw	248
   471     008F  00F2               	movwf	??_main
   472     0090  0872               	movf	??_main,w
   473     0091  1283               	bcf	3,5	;RP0=0, select bank0
   474     0092  0585               	andwf	5,f	;volatile
   475     0093                     l720:
   476                           
   477                           ;Main.c: 94:         _delay((unsigned long)((800)*(16000000/4000.0)));
   478     0093  3011               	movlw	17
   479     0094  00F4               	movwf	??_main+2
   480     0095  303C               	movlw	60
   481     0096  00F3               	movwf	??_main+1
   482     0097  30CB               	movlw	203
   483     0098  00F2               	movwf	??_main
   484     0099                     u137:
   485     0099  0BF2               	decfsz	??_main,f
   486     009A  2899               	goto	u137
   487     009B  0BF3               	decfsz	??_main+1,f
   488     009C  2899               	goto	u137
   489     009D  0BF4               	decfsz	??_main+2,f
   490     009E  2899               	goto	u137
   491     009F                     l722:
   492                           
   493                           ;Main.c: 95:         GPIObits.GP0 = 1;
   494     009F  1283               	bcf	3,5	;RP0=0, select bank0
   495     00A0  1405               	bsf	5,0	;volatile
   496     00A1                     l724:
   497                           
   498                           ;Main.c: 96:         _delay((unsigned long)((800)*(16000000/4000.0)));
   499     00A1  3011               	movlw	17
   500     00A2  00F4               	movwf	??_main+2
   501     00A3  303C               	movlw	60
   502     00A4  00F3               	movwf	??_main+1
   503     00A5  30CB               	movlw	203
   504     00A6  00F2               	movwf	??_main
   505     00A7                     u147:
   506     00A7  0BF2               	decfsz	??_main,f
   507     00A8  28A7               	goto	u147
   508     00A9  0BF3               	decfsz	??_main+1,f
   509     00AA  28A7               	goto	u147
   510     00AB  0BF4               	decfsz	??_main+2,f
   511     00AC  28A7               	goto	u147
   512     00AD                     l726:
   513                           
   514                           ;Main.c: 98:     if (!OSCCONbits.OSTS && !FAILFLAG){
   515     00AD  1683               	bsf	3,5	;RP0=1, select bank1
   516     00AE  198F               	btfsc	15,3	;volatile
   517     00AF  28B1               	goto	u81
   518     00B0  28B2               	goto	u80
   519     00B1                     u81:
   520     00B1  28D5               	goto	l738
   521     00B2                     u80:
   522     00B2                     l728:
   523     00B2  1877               	btfsc	_FAILFLAG/(0+8),_FAILFLAG& (0+7)
   524     00B3  28B5               	goto	u91
   525     00B4  28B6               	goto	u90
   526     00B5                     u91:
   527     00B5  28D5               	goto	l738
   528     00B6                     u90:
   529     00B6                     l730:
   530                           
   531                           ;Main.c: 99:         GPIO &= 0b11111000;
   532     00B6  30F8               	movlw	248
   533     00B7  00F2               	movwf	??_main
   534     00B8  0872               	movf	??_main,w
   535     00B9  1283               	bcf	3,5	;RP0=0, select bank0
   536     00BA  0585               	andwf	5,f	;volatile
   537     00BB                     l732:
   538                           
   539                           ;Main.c: 100:         _delay((unsigned long)((200)*(16000000/4000.0)));
   540     00BB  3005               	movlw	5
   541     00BC  00F4               	movwf	??_main+2
   542     00BD  300F               	movlw	15
   543     00BE  00F3               	movwf	??_main+1
   544     00BF  30F1               	movlw	241
   545     00C0  00F2               	movwf	??_main
   546     00C1                     u157:
   547     00C1  0BF2               	decfsz	??_main,f
   548     00C2  28C1               	goto	u157
   549     00C3  0BF3               	decfsz	??_main+1,f
   550     00C4  28C1               	goto	u157
   551     00C5  0BF4               	decfsz	??_main+2,f
   552     00C6  28C1               	goto	u157
   553     00C7                     l734:
   554                           
   555                           ;Main.c: 101:         GPIObits.GP1 = 1;
   556     00C7  1283               	bcf	3,5	;RP0=0, select bank0
   557     00C8  1485               	bsf	5,1	;volatile
   558     00C9                     l736:
   559                           
   560                           ;Main.c: 102:         _delay((unsigned long)((200)*(16000000/4000.0)));
   561     00C9  3005               	movlw	5
   562     00CA  00F4               	movwf	??_main+2
   563     00CB  300F               	movlw	15
   564     00CC  00F3               	movwf	??_main+1
   565     00CD  30F1               	movlw	241
   566     00CE  00F2               	movwf	??_main
   567     00CF                     u167:
   568     00CF  0BF2               	decfsz	??_main,f
   569     00D0  28CF               	goto	u167
   570     00D1  0BF3               	decfsz	??_main+1,f
   571     00D2  28CF               	goto	u167
   572     00D3  0BF4               	decfsz	??_main+2,f
   573     00D4  28CF               	goto	u167
   574     00D5                     l738:
   575                           
   576                           ;Main.c: 104:     __nop();
   577     00D5  0000               	nop
   578     00D6  2814               	goto	l674
   579     00D7  280A               	ljmp	start
   580     00D8                     __end_of_main:
   581                           
   582                           	psect	text1
   583     00ED                     __ptext1:	
   584 ;; *************** function _PicInit *****************
   585 ;; Defined at:
   586 ;;		line 46 in file "Main.c"
   587 ;; Parameters:    Size  Location     Type
   588 ;;		None
   589 ;; Auto vars:     Size  Location     Type
   590 ;;		None
   591 ;; Return value:  Size  Location     Type
   592 ;;                  1    wreg      void 
   593 ;; Registers used:
   594 ;;		wreg, status,2, status,0
   595 ;; Tracked objects:
   596 ;;		On entry : 0/0
   597 ;;		On exit  : 0/0
   598 ;;		Unchanged: 0/0
   599 ;; Data sizes:     COMMON   BANK0   BANK1
   600 ;;      Params:         0       0       0
   601 ;;      Locals:         0       0       0
   602 ;;      Temps:          0       0       0
   603 ;;      Totals:         0       0       0
   604 ;;Total ram usage:        0 bytes
   605 ;; Hardware stack levels used: 1
   606 ;; Hardware stack levels required when called: 1
   607 ;; This function calls:
   608 ;;		Nothing
   609 ;; This function is called by:
   610 ;;		_main
   611 ;; This function uses a non-reentrant model
   612 ;;
   613                           
   614     00ED                     _PicInit:	
   615                           ;psect for function _PicInit
   616                           
   617     00ED                     l648:	
   618                           ;incstack = 0
   619                           ; Regs used in _PicInit: [wreg+status,2+status,0]
   620                           
   621                           
   622                           ;Main.c: 47:     OSCCONbits.IRCF = 0b111;
   623     00ED  3070               	movlw	112
   624     00EE  1683               	bsf	3,5	;RP0=1, select bank1
   625     00EF  048F               	iorwf	15,f	;volatile
   626     00F0                     l650:
   627                           
   628                           ;Main.c: 48:     TRISIO = 0b00111000;
   629     00F0  3038               	movlw	56
   630     00F1  0085               	movwf	5	;volatile
   631     00F2                     l652:
   632                           
   633                           ;Main.c: 49:     GPIO = 0;
   634     00F2  1283               	bcf	3,5	;RP0=0, select bank0
   635     00F3  0185               	clrf	5	;volatile
   636     00F4                     l654:
   637                           
   638                           ;Main.c: 50:     ANSEL = 0;
   639     00F4  1683               	bsf	3,5	;RP0=1, select bank1
   640     00F5  019F               	clrf	31	;volatile
   641     00F6                     l656:
   642                           
   643                           ;Main.c: 51:     CMCON0 = 0b111;
   644     00F6  3007               	movlw	7
   645     00F7  1283               	bcf	3,5	;RP0=0, select bank0
   646     00F8  0099               	movwf	25	;volatile
   647                           
   648                           ;Main.c: 52:     WDTCONbits.WDTPS = 0b0110;
   649     00F9  0818               	movf	24,w	;volatile
   650     00FA  39E1               	andlw	-31
   651     00FB  380C               	iorlw	12
   652     00FC  0098               	movwf	24	;volatile
   653     00FD                     l658:
   654                           
   655                           ;Main.c: 54:     PIE1bits.OSFIE = 1;
   656     00FD  1683               	bsf	3,5	;RP0=1, select bank1
   657     00FE  150C               	bsf	12,2	;volatile
   658     00FF                     l39:
   659     00FF  0008               	return
   660     0100                     __end_of_PicInit:
   661                           
   662                           	psect	text2
   663     00D8                     __ptext2:	
   664 ;; *************** function _isr *****************
   665 ;; Defined at:
   666 ;;		line 37 in file "Main.c"
   667 ;; Parameters:    Size  Location     Type
   668 ;;		None
   669 ;; Auto vars:     Size  Location     Type
   670 ;;		None
   671 ;; Return value:  Size  Location     Type
   672 ;;                  1    wreg      void 
   673 ;; Registers used:
   674 ;;		None
   675 ;; Tracked objects:
   676 ;;		On entry : 0/0
   677 ;;		On exit  : 0/0
   678 ;;		Unchanged: 0/0
   679 ;; Data sizes:     COMMON   BANK0   BANK1
   680 ;;      Params:         0       0       0
   681 ;;      Locals:         0       0       0
   682 ;;      Temps:          2       0       0
   683 ;;      Totals:         2       0       0
   684 ;;Total ram usage:        2 bytes
   685 ;; Hardware stack levels used: 1
   686 ;; This function calls:
   687 ;;		Nothing
   688 ;; This function is called by:
   689 ;;		Interrupt level 1
   690 ;; This function uses a non-reentrant model
   691 ;;
   692                           
   693     00D8                     _isr:	
   694                           ;psect for function _isr
   695                           
   696     00D8                     i1l660:
   697                           
   698                           ;Main.c: 38:     if (PIE1bits.OSFIE && PIR1bits.OSFIF) {
   699     00D8  1683               	bsf	3,5	;RP0=1, select bank1
   700     00D9  1D0C               	btfss	12,2	;volatile
   701     00DA  28DC               	goto	u1_21
   702     00DB  28DD               	goto	u1_20
   703     00DC                     u1_21:
   704     00DC  28E6               	goto	i1l36
   705     00DD                     u1_20:
   706     00DD                     i1l662:
   707     00DD  1283               	bcf	3,5	;RP0=0, select bank0
   708     00DE  1D0C               	btfss	12,2	;volatile
   709     00DF  28E1               	goto	u2_21
   710     00E0  28E2               	goto	u2_20
   711     00E1                     u2_21:
   712     00E1  28E6               	goto	i1l36
   713     00E2                     u2_20:
   714     00E2                     i1l664:
   715                           
   716                           ;Main.c: 39:         FAILFLAG = 1;
   717     00E2  1477               	bsf	_FAILFLAG/(0+8),_FAILFLAG& (0+7)
   718                           
   719                           ;Main.c: 40:         PIE1bits.OSFIE = 0;
   720     00E3  1683               	bsf	3,5	;RP0=1, select bank1
   721     00E4  110C               	bcf	12,2	;volatile
   722                           
   723                           ;Main.c: 41:         OSCCONbits.SCS = 1;
   724     00E5  140F               	bsf	15,0	;volatile
   725     00E6                     i1l36:
   726     00E6  0871               	movf	??_isr+1,w
   727     00E7  008A               	movwf	10
   728     00E8  0E70               	swapf	??_isr,w
   729     00E9  0083               	movwf	3
   730     00EA  0EFE               	swapf	btemp,f
   731     00EB  0E7E               	swapf	btemp,w
   732     00EC  0009               	retfie
   733     00ED                     __end_of_isr:
   734     007E                     btemp	set	126	;btemp
   735     007E                     wtemp0	set	126
   736                           
   737                           	psect	intentry
   738     0004                     __pintentry:	
   739                           ;incstack = 0
   740                           ; Regs used in _isr: []
   741                           
   742     0004                     interrupt_function:
   743     007E                     saved_w	set	btemp
   744     0004  00FE               	movwf	btemp
   745     0005  0E03               	swapf	3,w
   746     0006  00F0               	movwf	??_isr
   747     0007  080A               	movf	10,w
   748     0008  00F1               	movwf	??_isr+1
   749     0009  28D8               	ljmp	_isr
   750                           
   751                           	psect	idloc
   752                           
   753                           ;Config register IDLOC0 @ 0x2000
   754                           ;	unspecified, using default values
   755     2000                     	org	8192
   756     2000  3FFF               	dw	16383
   757                           
   758                           ;Config register IDLOC1 @ 0x2001
   759                           ;	unspecified, using default values
   760     2001                     	org	8193
   761     2001  3FFF               	dw	16383
   762                           
   763                           ;Config register IDLOC2 @ 0x2002
   764                           ;	unspecified, using default values
   765     2002                     	org	8194
   766     2002  3FFF               	dw	16383
   767                           
   768                           ;Config register IDLOC3 @ 0x2003
   769                           ;	unspecified, using default values
   770     2003                     	org	8195
   771     2003  3FFF               	dw	16383
   772                           
   773                           	psect	config
   774                           
   775                           ;Config register CONFIG @ 0x2007
   776                           ;	Oscillator Selection bits
   777                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA4/OSC2/CLKOUT and RA5/OSC1
      +                          /CLKIN
   778                           ;	Watchdog Timer Enable bit
   779                           ;	WDTE = OFF, WDT disabled
   780                           ;	Power-up Timer Enable bit
   781                           ;	PWRTE = ON, PWRT enabled
   782                           ;	MCLR Pin Function Select bit
   783                           ;	MCLRE = OFF, MCLR pin function is digital input, MCLR internally tied to VDD
   784                           ;	Code Protection bit
   785                           ;	CP = OFF, Program memory code protection is disabled
   786                           ;	Data Code Protection bit
   787                           ;	CPD = OFF, Data memory code protection is disabled
   788                           ;	Brown Out Detect
   789                           ;	BOREN = OFF, BOR disabled
   790                           ;	Internal External Switchover bit
   791                           ;	IESO = ON, Internal External Switchover mode is enabled
   792                           ;	Fail-Safe Clock Monitor Enabled bit
   793                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   794     2007                     	org	8199
   795     2007  3CC2               	dw	15554

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       9
    BANK0            80      0       0
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      30
                                              2 COMMON     4     4      0
                            _PicInit
 ---------------------------------------------------------------------------------
 (1) _PicInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PicInit

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       1       0        7.1%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50      0       0       4        0.0%
BANK1               20      0       0       5        0.0%
ABS                  0      0       9       6        0.0%
BITBANK1            20      0       0       7        0.0%
DATA                 0      0       9       8        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Oct 13 21:51:36 2024

                     l39 00FF                       u30 0018                       u31 0017  
                     u40 0041                       u41 0040                       u50 0069  
                     u51 0068                       u60 0073                       u61 0072  
                     u70 0089                       u71 0088                       u80 00B2  
                     u81 00B1                       u90 00B6                       u91 00B5  
                    l700 0069                      l710 0079                      l702 006D  
                    l720 0093                      l712 0082                      l704 0073  
                    l650 00F0                      l730 00B6                      l722 009F  
                    l706 0075                      l714 0084                      l652 00F2  
                    l732 00BB                      l724 00A1                      l716 0089  
                    l708 0077                      l654 00F4                      l734 00C7  
                    l718 008E                      l726 00AD                      l670 0011  
                    l656 00F6                      l648 00ED                      l736 00C9  
                    l728 00B2                      l680 002D                      l672 0012  
                    l658 00FD                      l738 00D5                      l682 003A  
                    l674 0014                      l666 000F                      l684 003C  
                    l676 0018                      l668 0010                      l694 0047  
                    l686 0041                      l678 001E                      l696 0053  
                    l688 0046                      l698 005F                      u107 0033  
                    u117 0059                      u127 007D                      u137 0099  
                    u147 00A7                      u157 00C1                      u167 00CF  
                    _isr 00D8                     ?_isr 0070                     _GPIO 0005  
                   i1l36 00E6                     u1_20 00DD                     u1_21 00DC  
                   u2_20 00E2                     u2_21 00E1                     _main 000F  
                   btemp 007E                     start 000A          __end_of_PicInit 0100  
                  ??_isr 0070                    ?_main 0070                    _ANSEL 009F  
                  i1l660 00D8                    i1l662 00DD                    i1l664 00E2  
                  _retry 0078                    main@i 0075           __pbitbssCOMMON 03B8  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000B             __end_of_main 00D8                   ??_main 0072  
                 _CMCON0 0019                   _TRISIO 0085                ??_PicInit 0072  
                 saved_w 007E  __end_of__initialization 000D           __pcstackCOMMON 0070  
             __pnvCOMMON 0076               __pmaintext 000F               __pintentry 0004  
                _PicInit 00ED                  __ptext1 00ED                  __ptext2 00D8  
                _counter 0076     end_of_initialization 000D      start_initialization 000B  
            __end_of_isr 00ED              __pbssCOMMON 0078                ___latbits 0000  
               ?_PicInit 0070                 _FAILFLAG 03B8        interrupt_function 0004  
               _GPIObits 0005                 _PIE1bits 008C                 _PIR1bits 000C  
             _INTCONbits 000B                 intlevel1 0000               _OSCCONbits 008F  
             _WDTCONbits 0018  
