

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Oct 18 17:06:46 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	12F683
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	intentry,global,class=CODE,delta=2
    24                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27     0000                     
    28                           ; Version 2.40
    29                           ; Generated 06/12/2021 GMT
    30                           ; 
    31                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC12F683 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63     0000                     	;# 
    64     0001                     	;# 
    65     0002                     	;# 
    66     0003                     	;# 
    67     0004                     	;# 
    68     0005                     	;# 
    69     000A                     	;# 
    70     000B                     	;# 
    71     000C                     	;# 
    72     000E                     	;# 
    73     000E                     	;# 
    74     000F                     	;# 
    75     0010                     	;# 
    76     0011                     	;# 
    77     0012                     	;# 
    78     0013                     	;# 
    79     0013                     	;# 
    80     0014                     	;# 
    81     0015                     	;# 
    82     0018                     	;# 
    83     0019                     	;# 
    84     001A                     	;# 
    85     001E                     	;# 
    86     001F                     	;# 
    87     0081                     	;# 
    88     0085                     	;# 
    89     008C                     	;# 
    90     008E                     	;# 
    91     008F                     	;# 
    92     0090                     	;# 
    93     0092                     	;# 
    94     0095                     	;# 
    95     0095                     	;# 
    96     0096                     	;# 
    97     0096                     	;# 
    98     0099                     	;# 
    99     009A                     	;# 
   100     009A                     	;# 
   101     009B                     	;# 
   102     009C                     	;# 
   103     009D                     	;# 
   104     009E                     	;# 
   105     009F                     	;# 
   106     0000                     	;# 
   107     0001                     	;# 
   108     0002                     	;# 
   109     0003                     	;# 
   110     0004                     	;# 
   111     0005                     	;# 
   112     000A                     	;# 
   113     000B                     	;# 
   114     000C                     	;# 
   115     000E                     	;# 
   116     000E                     	;# 
   117     000F                     	;# 
   118     0010                     	;# 
   119     0011                     	;# 
   120     0012                     	;# 
   121     0013                     	;# 
   122     0013                     	;# 
   123     0014                     	;# 
   124     0015                     	;# 
   125     0018                     	;# 
   126     0019                     	;# 
   127     001A                     	;# 
   128     001E                     	;# 
   129     001F                     	;# 
   130     0081                     	;# 
   131     0085                     	;# 
   132     008C                     	;# 
   133     008E                     	;# 
   134     008F                     	;# 
   135     0090                     	;# 
   136     0092                     	;# 
   137     0095                     	;# 
   138     0095                     	;# 
   139     0096                     	;# 
   140     0096                     	;# 
   141     0099                     	;# 
   142     009A                     	;# 
   143     009A                     	;# 
   144     009B                     	;# 
   145     009C                     	;# 
   146     009D                     	;# 
   147     009E                     	;# 
   148     009F                     	;# 
   149     0000                     	;# 
   150     0001                     	;# 
   151     0002                     	;# 
   152     0003                     	;# 
   153     0004                     	;# 
   154     0005                     	;# 
   155     000A                     	;# 
   156     000B                     	;# 
   157     000C                     	;# 
   158     000E                     	;# 
   159     000E                     	;# 
   160     000F                     	;# 
   161     0010                     	;# 
   162     0011                     	;# 
   163     0012                     	;# 
   164     0013                     	;# 
   165     0013                     	;# 
   166     0014                     	;# 
   167     0015                     	;# 
   168     0018                     	;# 
   169     0019                     	;# 
   170     001A                     	;# 
   171     001E                     	;# 
   172     001F                     	;# 
   173     0081                     	;# 
   174     0085                     	;# 
   175     008C                     	;# 
   176     008E                     	;# 
   177     008F                     	;# 
   178     0090                     	;# 
   179     0092                     	;# 
   180     0095                     	;# 
   181     0095                     	;# 
   182     0096                     	;# 
   183     0096                     	;# 
   184     0099                     	;# 
   185     009A                     	;# 
   186     009A                     	;# 
   187     009B                     	;# 
   188     009C                     	;# 
   189     009D                     	;# 
   190     009E                     	;# 
   191     009F                     	;# 
   192                           
   193                           	psect	strings
   194     0157                     __pstrings:
   195     0157                     stringtab:
   196     0157                     __stringtab:
   197     0157                     stringcode:	
   198                           ;	String table - string pointers are 1 byte each
   199                           
   200     0157                     stringdir:
   201     0157  3001               	movlw	high stringdir
   202     0158  008A               	movwf	10
   203     0159  0804               	movf	4,w
   204     015A  0A84               	incf	4,f
   205     015B  0782               	addwf	2,f
   206     015C                     __stringbase:
   207     015C  3400               	retlw	0
   208     015D                     __end_of__stringtab:
   209     015D                     _lcdFunc:
   210     015D  3428               	retlw	40
   211     015E                     __end_of_lcdFunc:
   212     015E                     _lcdCon:
   213     015E  340E               	retlw	14
   214     015F                     __end_of_lcdCon:
   215     015F                     _lcdHome:
   216     015F  3402               	retlw	2
   217     0160                     __end_of_lcdHome:
   218     0160                     _lcdClear:
   219     0160  3401               	retlw	1
   220     0161                     __end_of_lcdClear:
   221     0161                     _lcd4bits:
   222     0161  3402               	retlw	2
   223     0162                     __end_of_lcd4bits:
   224     0162                     _myText1:
   225     0162  3457               	retlw	87
   226     0163  3472               	retlw	114
   227     0164  3469               	retlw	105
   228     0165  3474               	retlw	116
   229     0166  3469               	retlw	105
   230     0167  346E               	retlw	110
   231     0168  3467               	retlw	103
   232     0169  3420               	retlw	32
   233     016A  3465               	retlw	101
   234     016B  3465               	retlw	101
   235     016C  3470               	retlw	112
   236     016D  3472               	retlw	114
   237     016E  346F               	retlw	111
   238     016F  346D               	retlw	109
   239     0170  342E               	retlw	46
   240     0171  342E               	retlw	46
   241     0172  342E               	retlw	46
   242     0173  3400               	retlw	0
   243     0174                     __end_of_myText1:
   244     0174                     _myText2:
   245     0174  3456               	retlw	86
   246     0175  3461               	retlw	97
   247     0176  346C               	retlw	108
   248     0177  3475               	retlw	117
   249     0178  3465               	retlw	101
   250     0179  3420               	retlw	32
   251     017A  3472               	retlw	114
   252     017B  3465               	retlw	101
   253     017C  3461               	retlw	97
   254     017D  3464               	retlw	100
   255     017E  3420               	retlw	32
   256     017F  343A               	retlw	58
   257     0180  3400               	retlw	0
   258     0181                     __end_of_myText2:
   259     0181                     _myText3:
   260     0181  3445               	retlw	69
   261     0182  3472               	retlw	114
   262     0183  3461               	retlw	97
   263     0184  3473               	retlw	115
   264     0185  3469               	retlw	105
   265     0186  346E               	retlw	110
   266     0187  3467               	retlw	103
   267     0188  3420               	retlw	32
   268     0189  3440               	retlw	64
   269     018A  3420               	retlw	32
   270     018B  343A               	retlw	58
   271     018C  3400               	retlw	0
   272     018D                     __end_of_myText3:
   273     018D                     _myText4:
   274     018D  3454               	retlw	84
   275     018E  3468               	retlw	104
   276     018F  3461               	retlw	97
   277     0190  3474               	retlw	116
   278     0191  3427               	retlw	39
   279     0192  3473               	retlw	115
   280     0193  3420               	retlw	32
   281     0194  3461               	retlw	97
   282     0195  346C               	retlw	108
   283     0196  346C               	retlw	108
   284     0197  3400               	retlw	0
   285     0198                     __end_of_myText4:
   286     0198                     _myText5:
   287     0198  3446               	retlw	70
   288     0199  346F               	retlw	111
   289     019A  346C               	retlw	108
   290     019B  346B               	retlw	107
   291     019C  3473               	retlw	115
   292     019D  3420               	retlw	32
   293     019E  3421               	retlw	33
   294     019F  3400               	retlw	0
   295     01A0                     __end_of_myText5:
   296     000B                     _INTCONbits	set	11
   297     0005                     _GPIO	set	5
   298     0019                     _CMCON0	set	25
   299     000C                     _PIR1bits	set	12
   300     0005                     _GPIObits	set	5
   301     0085                     _TRISIO	set	133
   302     009F                     _ANSEL	set	159
   303     008F                     _OSCCONbits	set	143
   304     009C                     _EECON1bits	set	156
   305     009D                     _EECON2	set	157
   306     009A                     _EEDAT	set	154
   307     009B                     _EEADR	set	155
   308     008C                     _PIE1bits	set	140
   309                           
   310                           	psect	cinit
   311     000B                     start_initialization:	
   312                           ; #config settings
   313                           
   314     000B                     __initialization:
   315                           
   316                           ; Clear objects allocated to BITCOMMON
   317     000B  01FA               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   318                           
   319                           ; Clear objects allocated to COMMON
   320     000C  01FB               	clrf	__pbssCOMMON& (0+127)
   321                           
   322                           ; Clear objects allocated to BANK0
   323     000D  1283               	bcf	3,5	;RP0=0, select bank0
   324     000E  01AC               	clrf	__pbssBANK0& (0+127)
   325     000F                     end_of_initialization:	
   326                           ;End of C runtime variable initialization code
   327                           
   328     000F                     __end_of__initialization:
   329     000F  0183               	clrf	3
   330     0010  2811               	ljmp	_main	;jump to C main() function
   331                           
   332                           	psect	bitbssCOMMON
   333     03D0                     __pbitbssCOMMON:
   334     03D0                     _EEFLAG:
   335     03D0                     	ds	1
   336                           
   337                           	psect	bssCOMMON
   338     007B                     __pbssCOMMON:
   339     007B                     _B0:
   340     007B                     	ds	1
   341                           
   342                           	psect	bssBANK0
   343     002C                     __pbssBANK0:
   344     002C                     _B1:
   345     002C                     	ds	1
   346                           
   347                           	psect	cstackCOMMON
   348     0070                     __pcstackCOMMON:
   349     0070                     ?_do_Shiftr:
   350     0070                     ?_do_Lcd:	
   351                           ; 1 bytes @ 0x0
   352                           
   353     0070                     ?_init_Lcd:	
   354                           ; 1 bytes @ 0x0
   355                           
   356     0070                     ?_reset_Lcd:	
   357                           ; 1 bytes @ 0x0
   358                           
   359     0070                     ?_isr:	
   360                           ; 1 bytes @ 0x0
   361                           
   362     0070                     ??_isr:	
   363                           ; 1 bytes @ 0x0
   364                           
   365     0070                     ?_readEEprom:	
   366                           ; 1 bytes @ 0x0
   367                           
   368     0070                     ?_picInit:	
   369                           ; 1 bytes @ 0x0
   370                           
   371     0070                     ?_main:	
   372                           ; 1 bytes @ 0x0
   373                           
   374                           
   375                           ; 1 bytes @ 0x0
   376     0070                     	ds	2
   377     0072                     ??_do_Shiftr:
   378     0072                     ??_do_Lcd:	
   379                           ; 1 bytes @ 0x2
   380                           
   381     0072                     ?_writeEEprom:	
   382                           ; 1 bytes @ 0x2
   383                           
   384     0072                     ??_readEEprom:	
   385                           ; 1 bytes @ 0x2
   386                           
   387     0072                     ??_picInit:	
   388                           ; 1 bytes @ 0x2
   389                           
   390     0072                     writeEEprom@data:	
   391                           ; 1 bytes @ 0x2
   392                           
   393     0072                     readEEprom@addr:	
   394                           ; 1 bytes @ 0x2
   395                           
   396                           
   397                           ; 1 bytes @ 0x2
   398     0072                     	ds	1
   399     0073                     ??_writeEEprom:
   400     0073                     do_Shiftr@value:	
   401                           ; 1 bytes @ 0x3
   402                           
   403     0073                     writeEEprom@addr:	
   404                           ; 1 bytes @ 0x3
   405                           
   406                           
   407                           ; 1 bytes @ 0x3
   408     0073                     	ds	1
   409     0074                     do_Shiftr@i:
   410                           
   411                           ; 1 bytes @ 0x4
   412     0074                     	ds	1
   413     0075                     ?_send_Nibbles:
   414     0075                     send_Nibbles@rs:	
   415                           ; 1 bytes @ 0x5
   416                           
   417                           
   418                           ; 1 bytes @ 0x5
   419     0075                     	ds	1
   420     0076                     ??_send_Nibbles:
   421                           
   422                           ; 1 bytes @ 0x6
   423     0076                     	ds	1
   424     0077                     send_Nibbles@data:
   425                           
   426                           ; 1 bytes @ 0x7
   427     0077                     	ds	1
   428     0078                     send_Nibbles@lowB:
   429                           
   430                           ; 1 bytes @ 0x8
   431     0078                     	ds	1
   432     0079                     send_Nibbles@hiB:
   433                           
   434                           ; 1 bytes @ 0x9
   435     0079                     	ds	1
   436                           
   437                           	psect	cstackBANK0
   438     0020                     __pcstackBANK0:
   439     0020                     ??_init_Lcd:
   440     0020                     ?_pos_Lcd:	
   441                           ; 1 bytes @ 0x0
   442                           
   443     0020                     ?_send_Text:	
   444                           ; 1 bytes @ 0x0
   445                           
   446     0020                     ??_reset_Lcd:	
   447                           ; 1 bytes @ 0x0
   448                           
   449     0020                     pos_Lcd@y:	
   450                           ; 1 bytes @ 0x0
   451                           
   452     0020                     send_Text@n:	
   453                           ; 1 bytes @ 0x0
   454                           
   455                           
   456                           ; 1 bytes @ 0x0
   457     0020                     	ds	1
   458     0021                     ??_pos_Lcd:
   459     0021                     ??_send_Text:	
   460                           ; 1 bytes @ 0x1
   461                           
   462                           
   463                           ; 1 bytes @ 0x1
   464     0021                     	ds	1
   465     0022                     pos_Lcd@x:
   466                           
   467                           ; 1 bytes @ 0x2
   468     0022                     	ds	1
   469     0023                     pos_Lcd@pos:
   470     0023                     send_Text@s:	
   471                           ; 1 bytes @ 0x3
   472                           
   473                           
   474                           ; 1 bytes @ 0x3
   475     0023                     	ds	1
   476     0024                     send_Text@i:
   477                           
   478                           ; 1 bytes @ 0x4
   479     0024                     	ds	1
   480     0025                     ??_main:
   481                           
   482                           ; 1 bytes @ 0x5
   483     0025                     	ds	3
   484     0028                     main@i:
   485                           
   486                           ; 1 bytes @ 0x8
   487     0028                     	ds	1
   488     0029                     main@i_316:
   489                           
   490                           ; 1 bytes @ 0x9
   491     0029                     	ds	1
   492     002A                     main@B0:
   493                           
   494                           ; 1 bytes @ 0xA
   495     002A                     	ds	1
   496     002B                     main@i_318:
   497                           
   498                           ; 1 bytes @ 0xB
   499     002B                     	ds	1
   500                           
   501                           	psect	maintext
   502     0011                     __pmaintext:	
   503 ;;
   504 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   505 ;;
   506 ;; *************** function _main *****************
   507 ;; Defined at:
   508 ;;		line 89 in file "main.c"
   509 ;; Parameters:    Size  Location     Type
   510 ;;		None
   511 ;; Auto vars:     Size  Location     Type
   512 ;;  i               1   11[BANK0 ] unsigned char 
   513 ;;  i               1    9[BANK0 ] unsigned char 
   514 ;;  B0              1   10[BANK0 ] unsigned char 
   515 ;;  i               1    8[BANK0 ] unsigned char 
   516 ;; Return value:  Size  Location     Type
   517 ;;                  1    wreg      void 
   518 ;; Registers used:
   519 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   520 ;; Tracked objects:
   521 ;;		On entry : B00/0
   522 ;;		On exit  : 0/0
   523 ;;		Unchanged: 0/0
   524 ;; Data sizes:     COMMON   BANK0   BANK1
   525 ;;      Params:         0       0       0
   526 ;;      Locals:         0       4       0
   527 ;;      Temps:          0       3       0
   528 ;;      Totals:         0       7       0
   529 ;;Total ram usage:        7 bytes
   530 ;; Hardware stack levels required when called: 4
   531 ;; This function calls:
   532 ;;		_init_Lcd
   533 ;;		_picInit
   534 ;;		_pos_Lcd
   535 ;;		_readEEprom
   536 ;;		_reset_Lcd
   537 ;;		_send_Nibbles
   538 ;;		_send_Text
   539 ;;		_writeEEprom
   540 ;; This function is called by:
   541 ;;		Startup code after reset
   542 ;; This function uses a non-reentrant model
   543 ;;
   544                           
   545     0011                     _main:	
   546                           ;psect for function _main
   547                           
   548     0011                     l1216:	
   549                           ;incstack = 0
   550                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   551                           
   552                           
   553                           ;main.c: 90:     picInit();
   554     0011  2268               	fcall	_picInit
   555                           
   556                           ;main.c: 91:     init_Lcd();
   557     0012  210D               	fcall	_init_Lcd
   558     0013                     l1218:
   559                           
   560                           ;main.c: 92:     send_Text(myText1,sizeof (myText1));
   561     0013  3012               	movlw	18
   562     0014  1283               	bcf	3,5	;RP0=0, select bank0
   563     0015  00A0               	movwf	send_Text@n
   564     0016  3006               	movlw	(low ((_myText1-__stringbase)| (0+32768)))& (0+255)
   565     0017  21A0               	fcall	_send_Text
   566     0018                     l1220:
   567                           
   568                           ;main.c: 93:         _delay((unsigned long)((50)*(4000000/4000.0)));
   569     0018  3041               	movlw	65
   570     0019  1283               	bcf	3,5	;RP0=0, select bank0
   571     001A  00A6               	movwf	??_main+1
   572     001B  30EE               	movlw	238
   573     001C  00A5               	movwf	??_main
   574     001D                     u307:
   575     001D  0BA5               	decfsz	??_main,f
   576     001E  281D               	goto	u307
   577     001F  0BA6               	decfsz	??_main+1,f
   578     0020  281D               	goto	u307
   579     0021                     l1222:
   580                           
   581                           ;main.c: 95:     INTCONbits.GIE = 0;
   582     0021  138B               	bcf	11,7	;volatile
   583     0022                     l1224:
   584                           
   585                           ;main.c: 96:     EECON1bits.WREN = 1;
   586     0022  1683               	bsf	3,5	;RP0=1, select bank1
   587     0023  151C               	bsf	28,2	;volsfr
   588     0024                     l1226:
   589                           
   590                           ;main.c: 97:     for (unsigned char i = 0, B0 = 33 ; B0<44 ; B0++){
   591     0024  1283               	bcf	3,5	;RP0=0, select bank0
   592     0025  01A8               	clrf	main@i
   593     0026                     l1228:
   594     0026  3021               	movlw	33
   595     0027  00AA               	movwf	main@B0
   596     0028                     l1234:
   597                           
   598                           ;main.c: 98:         writeEEprom(i, B0);
   599     0028  082A               	movf	main@B0,w
   600     0029  00F2               	movwf	writeEEprom@data
   601     002A  0828               	movf	main@i,w
   602     002B  222E               	fcall	_writeEEprom
   603                           
   604                           ;main.c: 99:         pos_Lcd(2,6);
   605     002C  3006               	movlw	6
   606     002D  1283               	bcf	3,5	;RP0=0, select bank0
   607     002E  00A0               	movwf	pos_Lcd@y
   608     002F  3002               	movlw	2
   609     0030  2242               	fcall	_pos_Lcd
   610                           
   611                           ;main.c: 100:         send_Nibbles(B0, 1);
   612     0031  01F5               	clrf	send_Nibbles@rs
   613     0032  0AF5               	incf	send_Nibbles@rs,f
   614     0033  1283               	bcf	3,5	;RP0=0, select bank0
   615     0034  082A               	movf	main@B0,w
   616     0035  21F3               	fcall	_send_Nibbles
   617     0036                     l1236:
   618                           
   619                           ;main.c: 101:         GPIObits.GP4 ^= 1;
   620     0036  1283               	bcf	3,5	;RP0=0, select bank0
   621     0037  0E05               	swapf	5,w	;volatile
   622     0038  3901               	andlw	1
   623     0039  00A5               	movwf	??_main
   624     003A  3001               	movlw	1
   625     003B  06A5               	xorwf	??_main,f
   626     003C  0EA5               	swapf	??_main,f
   627     003D  0805               	movf	5,w	;volatile
   628     003E  0625               	xorwf	??_main,w
   629     003F  39EF               	andlw	-17
   630     0040  0625               	xorwf	??_main,w
   631     0041  0085               	movwf	5	;volatile
   632     0042                     l1238:
   633                           
   634                           ;main.c: 102:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   635     0042  3006               	movlw	6
   636     0043  1283               	bcf	3,5	;RP0=0, select bank0
   637     0044  00A7               	movwf	??_main+2
   638     0045  3013               	movlw	19
   639     0046  00A6               	movwf	??_main+1
   640     0047  30AD               	movlw	173
   641     0048  00A5               	movwf	??_main
   642     0049                     u317:
   643     0049  0BA5               	decfsz	??_main,f
   644     004A  2849               	goto	u317
   645     004B  0BA6               	decfsz	??_main+1,f
   646     004C  2849               	goto	u317
   647     004D  0BA7               	decfsz	??_main+2,f
   648     004E  2849               	goto	u317
   649     004F  0000               	nop
   650     0050                     l1240:
   651                           
   652                           ;main.c: 103:         i++;
   653     0050  3001               	movlw	1
   654     0051  1283               	bcf	3,5	;RP0=0, select bank0
   655     0052  00A5               	movwf	??_main
   656     0053  0825               	movf	??_main,w
   657     0054  07A8               	addwf	main@i,f
   658     0055                     l1242:
   659                           
   660                           ;main.c: 104:     }
   661     0055  3001               	movlw	1
   662     0056  00A5               	movwf	??_main
   663     0057  0825               	movf	??_main,w
   664     0058  07AA               	addwf	main@B0,f
   665     0059                     l1244:
   666     0059  302C               	movlw	44
   667     005A  022A               	subwf	main@B0,w
   668     005B  1C03               	skipc
   669     005C  285E               	goto	u271
   670     005D  285F               	goto	u270
   671     005E                     u271:
   672     005E  2828               	goto	l1234
   673     005F                     u270:
   674     005F                     l1246:
   675                           
   676                           ;main.c: 105:     GPIObits.GP4 ^= 1;
   677     005F  0E05               	swapf	5,w	;volatile
   678     0060  3901               	andlw	1
   679     0061  00A5               	movwf	??_main
   680     0062  3001               	movlw	1
   681     0063  06A5               	xorwf	??_main,f
   682     0064  0EA5               	swapf	??_main,f
   683     0065  0805               	movf	5,w	;volatile
   684     0066  0625               	xorwf	??_main,w
   685     0067  39EF               	andlw	-17
   686     0068  0625               	xorwf	??_main,w
   687     0069  0085               	movwf	5	;volatile
   688     006A                     l1248:
   689                           
   690                           ;main.c: 106:     EECON1bits.WREN = 0;
   691     006A  1683               	bsf	3,5	;RP0=1, select bank1
   692     006B  111C               	bcf	28,2	;volsfr
   693     006C                     l1250:
   694                           
   695                           ;main.c: 107:     INTCONbits.GIE = 1;
   696     006C  178B               	bsf	11,7	;volatile
   697     006D                     l1252:
   698                           
   699                           ;main.c: 109:     reset_Lcd();
   700     006D  2213               	fcall	_reset_Lcd
   701     006E                     l1254:
   702                           
   703                           ;main.c: 110:     send_Text(myText2,sizeof (myText2));
   704     006E  300D               	movlw	13
   705     006F  1283               	bcf	3,5	;RP0=0, select bank0
   706     0070  00A0               	movwf	send_Text@n
   707     0071  3018               	movlw	(low ((_myText2-__stringbase)| (0+32768)))& (0+255)
   708     0072  21A0               	fcall	_send_Text
   709     0073                     l1256:
   710                           
   711                           ;main.c: 112:     for (char i = 0 ; i < 10; i++){
   712     0073  1283               	bcf	3,5	;RP0=0, select bank0
   713     0074  01A9               	clrf	main@i_316
   714     0075                     l1262:
   715                           
   716                           ;main.c: 113:         B1 = readEEprom(i);
   717     0075  0829               	movf	main@i_316,w
   718     0076  2281               	fcall	_readEEprom
   719     0077  1283               	bcf	3,5	;RP0=0, select bank0
   720     0078  00AC               	movwf	_B1
   721     0079                     l1264:
   722                           
   723                           ;main.c: 114:         pos_Lcd(2,6);
   724     0079  3006               	movlw	6
   725     007A  00A0               	movwf	pos_Lcd@y
   726     007B  3002               	movlw	2
   727     007C  2242               	fcall	_pos_Lcd
   728     007D                     l1266:
   729                           
   730                           ;main.c: 115:         send_Nibbles(B1, 1);
   731     007D  01F5               	clrf	send_Nibbles@rs
   732     007E  0AF5               	incf	send_Nibbles@rs,f
   733     007F  1283               	bcf	3,5	;RP0=0, select bank0
   734     0080  082C               	movf	_B1,w
   735     0081  21F3               	fcall	_send_Nibbles
   736     0082                     l1268:
   737                           
   738                           ;main.c: 116:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   739     0082  3006               	movlw	6
   740     0083  1283               	bcf	3,5	;RP0=0, select bank0
   741     0084  00A7               	movwf	??_main+2
   742     0085  3013               	movlw	19
   743     0086  00A6               	movwf	??_main+1
   744     0087  30AD               	movlw	173
   745     0088  00A5               	movwf	??_main
   746     0089                     u327:
   747     0089  0BA5               	decfsz	??_main,f
   748     008A  2889               	goto	u327
   749     008B  0BA6               	decfsz	??_main+1,f
   750     008C  2889               	goto	u327
   751     008D  0BA7               	decfsz	??_main+2,f
   752     008E  2889               	goto	u327
   753     008F  0000               	nop
   754     0090                     l1270:
   755                           
   756                           ;main.c: 117:     }
   757     0090  3001               	movlw	1
   758     0091  1283               	bcf	3,5	;RP0=0, select bank0
   759     0092  00A5               	movwf	??_main
   760     0093  0825               	movf	??_main,w
   761     0094  07A9               	addwf	main@i_316,f
   762     0095                     l1272:
   763     0095  300A               	movlw	10
   764     0096  0229               	subwf	main@i_316,w
   765     0097  1C03               	skipc
   766     0098  289A               	goto	u281
   767     0099  289B               	goto	u280
   768     009A                     u281:
   769     009A  2875               	goto	l1262
   770     009B                     u280:
   771     009B                     l1274:
   772                           
   773                           ;main.c: 119:     reset_Lcd();
   774     009B  2213               	fcall	_reset_Lcd
   775     009C                     l1276:
   776                           
   777                           ;main.c: 120:     send_Text(myText3,sizeof (myText3));
   778     009C  300C               	movlw	12
   779     009D  1283               	bcf	3,5	;RP0=0, select bank0
   780     009E  00A0               	movwf	send_Text@n
   781     009F  3025               	movlw	(low ((_myText3-__stringbase)| (0+32768)))& (0+255)
   782     00A0  21A0               	fcall	_send_Text
   783     00A1                     l1278:
   784                           
   785                           ;main.c: 122:     INTCONbits.GIE = 0;
   786     00A1  138B               	bcf	11,7	;volatile
   787     00A2                     l1280:
   788                           
   789                           ;main.c: 123:     EECON1bits.WREN = 1;
   790     00A2  1683               	bsf	3,5	;RP0=1, select bank1
   791     00A3  151C               	bsf	28,2	;volsfr
   792     00A4                     l1282:
   793                           
   794                           ;main.c: 124:     for (char i = 0 ; i < 15 ; i++){
   795     00A4  1283               	bcf	3,5	;RP0=0, select bank0
   796     00A5  01AB               	clrf	main@i_318
   797     00A6                     l1288:
   798                           
   799                           ;main.c: 125:         writeEEprom(i, 0xFF);
   800     00A6  30FF               	movlw	255
   801     00A7  00F2               	movwf	writeEEprom@data
   802     00A8  082B               	movf	main@i_318,w
   803     00A9  222E               	fcall	_writeEEprom
   804                           
   805                           ;main.c: 126:         pos_Lcd(2,6);
   806     00AA  3006               	movlw	6
   807     00AB  1283               	bcf	3,5	;RP0=0, select bank0
   808     00AC  00A0               	movwf	pos_Lcd@y
   809     00AD  3002               	movlw	2
   810     00AE  2242               	fcall	_pos_Lcd
   811                           
   812                           ;main.c: 127:         send_Nibbles(i + 48, 1);
   813     00AF  01F5               	clrf	send_Nibbles@rs
   814     00B0  0AF5               	incf	send_Nibbles@rs,f
   815     00B1  1283               	bcf	3,5	;RP0=0, select bank0
   816     00B2  082B               	movf	main@i_318,w
   817     00B3  3E30               	addlw	48
   818     00B4  21F3               	fcall	_send_Nibbles
   819     00B5                     l1290:
   820                           
   821                           ;main.c: 128:         GPIObits.GP4 ^= 1;
   822     00B5  1283               	bcf	3,5	;RP0=0, select bank0
   823     00B6  0E05               	swapf	5,w	;volatile
   824     00B7  3901               	andlw	1
   825     00B8  00A5               	movwf	??_main
   826     00B9  3001               	movlw	1
   827     00BA  06A5               	xorwf	??_main,f
   828     00BB  0EA5               	swapf	??_main,f
   829     00BC  0805               	movf	5,w	;volatile
   830     00BD  0625               	xorwf	??_main,w
   831     00BE  39EF               	andlw	-17
   832     00BF  0625               	xorwf	??_main,w
   833     00C0  0085               	movwf	5	;volatile
   834     00C1                     l1292:
   835                           
   836                           ;main.c: 129:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   837     00C1  3006               	movlw	6
   838     00C2  1283               	bcf	3,5	;RP0=0, select bank0
   839     00C3  00A7               	movwf	??_main+2
   840     00C4  3013               	movlw	19
   841     00C5  00A6               	movwf	??_main+1
   842     00C6  30AD               	movlw	173
   843     00C7  00A5               	movwf	??_main
   844     00C8                     u337:
   845     00C8  0BA5               	decfsz	??_main,f
   846     00C9  28C8               	goto	u337
   847     00CA  0BA6               	decfsz	??_main+1,f
   848     00CB  28C8               	goto	u337
   849     00CC  0BA7               	decfsz	??_main+2,f
   850     00CD  28C8               	goto	u337
   851     00CE  0000               	nop
   852     00CF                     l1294:
   853                           
   854                           ;main.c: 130:     }
   855     00CF  3001               	movlw	1
   856     00D0  1283               	bcf	3,5	;RP0=0, select bank0
   857     00D1  00A5               	movwf	??_main
   858     00D2  0825               	movf	??_main,w
   859     00D3  07AB               	addwf	main@i_318,f
   860     00D4                     l1296:
   861     00D4  300F               	movlw	15
   862     00D5  022B               	subwf	main@i_318,w
   863     00D6  1C03               	skipc
   864     00D7  28D9               	goto	u291
   865     00D8  28DA               	goto	u290
   866     00D9                     u291:
   867     00D9  28A6               	goto	l1288
   868     00DA                     u290:
   869     00DA                     l1298:
   870                           
   871                           ;main.c: 131:     GPIObits.GP4 ^= 1;
   872     00DA  0E05               	swapf	5,w	;volatile
   873     00DB  3901               	andlw	1
   874     00DC  00A5               	movwf	??_main
   875     00DD  3001               	movlw	1
   876     00DE  06A5               	xorwf	??_main,f
   877     00DF  0EA5               	swapf	??_main,f
   878     00E0  0805               	movf	5,w	;volatile
   879     00E1  0625               	xorwf	??_main,w
   880     00E2  39EF               	andlw	-17
   881     00E3  0625               	xorwf	??_main,w
   882     00E4  0085               	movwf	5	;volatile
   883     00E5                     l1300:
   884                           
   885                           ;main.c: 132:     EECON1bits.WREN = 0;
   886     00E5  1683               	bsf	3,5	;RP0=1, select bank1
   887     00E6  111C               	bcf	28,2	;volsfr
   888     00E7                     l1302:
   889                           
   890                           ;main.c: 133:     INTCONbits.GIE = 1;
   891     00E7  178B               	bsf	11,7	;volatile
   892     00E8                     l1304:
   893                           
   894                           ;main.c: 136:         reset_Lcd();
   895     00E8  2213               	fcall	_reset_Lcd
   896     00E9                     l1306:
   897                           
   898                           ;main.c: 137:         pos_Lcd(1,2);
   899     00E9  3002               	movlw	2
   900     00EA  1283               	bcf	3,5	;RP0=0, select bank0
   901     00EB  00A0               	movwf	pos_Lcd@y
   902     00EC  3001               	movlw	1
   903     00ED  2242               	fcall	_pos_Lcd
   904     00EE                     l1308:
   905                           
   906                           ;main.c: 138:         send_Text(myText4,sizeof (myText4));
   907     00EE  300B               	movlw	11
   908     00EF  1283               	bcf	3,5	;RP0=0, select bank0
   909     00F0  00A0               	movwf	send_Text@n
   910     00F1  3031               	movlw	(low ((_myText4-__stringbase)| (0+32768)))& (0+255)
   911     00F2  21A0               	fcall	_send_Text
   912     00F3                     l1310:
   913                           
   914                           ;main.c: 139:         pos_Lcd(2,5);
   915     00F3  3005               	movlw	5
   916     00F4  1283               	bcf	3,5	;RP0=0, select bank0
   917     00F5  00A0               	movwf	pos_Lcd@y
   918     00F6  3002               	movlw	2
   919     00F7  2242               	fcall	_pos_Lcd
   920     00F8                     l1312:
   921                           
   922                           ;main.c: 140:         send_Text(myText5,sizeof (myText5));
   923     00F8  3008               	movlw	8
   924     00F9  1283               	bcf	3,5	;RP0=0, select bank0
   925     00FA  00A0               	movwf	send_Text@n
   926     00FB  303C               	movlw	(low ((_myText5-__stringbase)| (0+32768)))& (0+255)
   927     00FC  21A0               	fcall	_send_Text
   928     00FD                     l1314:
   929                           
   930                           ;main.c: 141:         _delay((unsigned long)((10000)*(4000000/4000.0)));
   931     00FD  3033               	movlw	51
   932     00FE  1283               	bcf	3,5	;RP0=0, select bank0
   933     00FF  00A7               	movwf	??_main+2
   934     0100  30BB               	movlw	187
   935     0101  00A6               	movwf	??_main+1
   936     0102  30DF               	movlw	223
   937     0103  00A5               	movwf	??_main
   938     0104                     u347:
   939     0104  0BA5               	decfsz	??_main,f
   940     0105  2904               	goto	u347
   941     0106  0BA6               	decfsz	??_main+1,f
   942     0107  2904               	goto	u347
   943     0108  0BA7               	decfsz	??_main+2,f
   944     0109  2904               	goto	u347
   945     010A  0000               	nop
   946     010B  28E8               	goto	l1304
   947     010C  280A               	ljmp	start
   948     010D                     __end_of_main:
   949                           
   950                           	psect	text1
   951     022E                     __ptext1:	
   952 ;; *************** function _writeEEprom *****************
   953 ;; Defined at:
   954 ;;		line 56 in file "main.c"
   955 ;; Parameters:    Size  Location     Type
   956 ;;  addr            1    wreg     unsigned char 
   957 ;;  data            1    2[COMMON] unsigned char 
   958 ;; Auto vars:     Size  Location     Type
   959 ;;  addr            1    3[COMMON] unsigned char 
   960 ;; Return value:  Size  Location     Type
   961 ;;                  1    wreg      void 
   962 ;; Registers used:
   963 ;;		wreg
   964 ;; Tracked objects:
   965 ;;		On entry : 0/0
   966 ;;		On exit  : 0/0
   967 ;;		Unchanged: 0/0
   968 ;; Data sizes:     COMMON   BANK0   BANK1
   969 ;;      Params:         1       0       0
   970 ;;      Locals:         1       0       0
   971 ;;      Temps:          0       0       0
   972 ;;      Totals:         2       0       0
   973 ;;Total ram usage:        2 bytes
   974 ;; Hardware stack levels used: 1
   975 ;; Hardware stack levels required when called: 1
   976 ;; This function calls:
   977 ;;		Nothing
   978 ;; This function is called by:
   979 ;;		_main
   980 ;; This function uses a non-reentrant model
   981 ;;
   982                           
   983     022E                     _writeEEprom:	
   984                           ;psect for function _writeEEprom
   985                           
   986                           
   987                           ;incstack = 0
   988                           ; Regs used in _writeEEprom: [wreg]
   989                           ;writeEEprom@addr stored from wreg
   990     022E  00F3               	movwf	writeEEprom@addr
   991     022F                     l1046:
   992                           
   993                           ;main.c: 57:     EEADR = addr;
   994     022F  0873               	movf	writeEEprom@addr,w
   995     0230  1683               	bsf	3,5	;RP0=1, select bank1
   996     0231  009B               	movwf	27	;volatile
   997                           
   998                           ;main.c: 58:     EEDAT = data;
   999     0232  0872               	movf	writeEEprom@data,w
  1000     0233  009A               	movwf	26	;volatile
  1001                           
  1002                           ;main.c: 61:     EECON2 = 0x55;
  1003     0234  3055               	movlw	85
  1004     0235  009D               	movwf	29	;volsfr
  1005                           
  1006                           ;main.c: 62:     EECON2 = 0xAA;
  1007     0236  30AA               	movlw	170
  1008     0237  009D               	movwf	29	;volsfr
  1009     0238                     l1048:
  1010                           
  1011                           ;main.c: 64:     EECON1bits.WR = 1;
  1012     0238  149C               	bsf	28,1	;volsfr
  1013     0239                     l123:	
  1014                           ;main.c: 65:     while (!PIR1bits.EEIF);
  1015                           
  1016     0239  1283               	bcf	3,5	;RP0=0, select bank0
  1017     023A  1F8C               	btfss	12,7	;volatile
  1018     023B  2A3D               	goto	u211
  1019     023C  2A3E               	goto	u210
  1020     023D                     u211:
  1021     023D  2A39               	goto	l123
  1022     023E                     u210:
  1023     023E                     l125:
  1024                           
  1025                           ;main.c: 67:     __nop();
  1026     023E  0000               	nop
  1027                           
  1028                           ;main.c: 68:     PIR1bits.EEIF = 0;
  1029     023F  1283               	bcf	3,5	;RP0=0, select bank0
  1030     0240  138C               	bcf	12,7	;volatile
  1031     0241                     l126:
  1032     0241  0008               	return
  1033     0242                     __end_of_writeEEprom:
  1034                           
  1035                           	psect	text2
  1036     01A0                     __ptext2:	
  1037 ;; *************** function _send_Text *****************
  1038 ;; Defined at:
  1039 ;;		line 77 in file "../XC8-template-lcd.X/lcd.c"
  1040 ;; Parameters:    Size  Location     Type
  1041 ;;  s               1    wreg     PTR const unsigned char 
  1042 ;;		 -> myText5(8), myText4(11), myText3(12), myText2(13), 
  1043 ;;		 -> myText1(18), 
  1044 ;;  n               1    0[BANK0 ] unsigned char 
  1045 ;; Auto vars:     Size  Location     Type
  1046 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  1047 ;;		 -> myText5(8), myText4(11), myText3(12), myText2(13), 
  1048 ;;		 -> myText1(18), 
  1049 ;;  i               1    4[BANK0 ] unsigned char 
  1050 ;; Return value:  Size  Location     Type
  1051 ;;                  1    wreg      void 
  1052 ;; Registers used:
  1053 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1054 ;; Tracked objects:
  1055 ;;		On entry : 0/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMMON   BANK0   BANK1
  1059 ;;      Params:         0       1       0
  1060 ;;      Locals:         0       2       0
  1061 ;;      Temps:          0       2       0
  1062 ;;      Totals:         0       5       0
  1063 ;;Total ram usage:        5 bytes
  1064 ;; Hardware stack levels used: 1
  1065 ;; Hardware stack levels required when called: 3
  1066 ;; This function calls:
  1067 ;;		_send_Nibbles
  1068 ;; This function is called by:
  1069 ;;		_main
  1070 ;; This function uses a non-reentrant model
  1071 ;;
  1072                           
  1073     01A0                     _send_Text:	
  1074                           ;psect for function _send_Text
  1075                           
  1076                           
  1077                           ;incstack = 0
  1078                           ; Regs used in _send_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1079                           ;send_Text@s stored from wreg
  1080     01A0  1283               	bcf	3,5	;RP0=0, select bank0
  1081     01A1  00A3               	movwf	send_Text@s
  1082     01A2                     l1198:
  1083                           
  1084                           ;../XC8-template-lcd.X/lcd.c: 78:     for (unsigned char i = 0; i < n - 1; i++) {
  1085     01A2  01A4               	clrf	send_Text@i
  1086     01A3  29BB               	goto	l1206
  1087     01A4                     l1200:
  1088                           
  1089                           ;../XC8-template-lcd.X/lcd.c: 79:         send_Nibbles(s[i], 1);
  1090     01A4  01F5               	clrf	send_Nibbles@rs
  1091     01A5  0AF5               	incf	send_Nibbles@rs,f
  1092     01A6  1283               	bcf	3,5	;RP0=0, select bank0
  1093     01A7  0824               	movf	send_Text@i,w
  1094     01A8  0723               	addwf	send_Text@s,w
  1095     01A9  0084               	movwf	4
  1096     01AA  2157               	fcall	stringdir
  1097     01AB  21F3               	fcall	_send_Nibbles
  1098     01AC                     l1202:
  1099                           
  1100                           ;../XC8-template-lcd.X/lcd.c: 80:         _delay((unsigned long)((5)*(4000000/4000.0)));
  1101     01AC  3007               	movlw	7
  1102     01AD  1283               	bcf	3,5	;RP0=0, select bank0
  1103     01AE  00A2               	movwf	??_send_Text+1
  1104     01AF  307C               	movlw	124
  1105     01B0  00A1               	movwf	??_send_Text
  1106     01B1                     u357:
  1107     01B1  0BA1               	decfsz	??_send_Text,f
  1108     01B2  29B1               	goto	u357
  1109     01B3  0BA2               	decfsz	??_send_Text+1,f
  1110     01B4  29B1               	goto	u357
  1111     01B5  29B6               	nop2
  1112     01B6                     l1204:
  1113                           
  1114                           ;../XC8-template-lcd.X/lcd.c: 81:     }
  1115     01B6  3001               	movlw	1
  1116     01B7  1283               	bcf	3,5	;RP0=0, select bank0
  1117     01B8  00A1               	movwf	??_send_Text
  1118     01B9  0821               	movf	??_send_Text,w
  1119     01BA  07A4               	addwf	send_Text@i,f
  1120     01BB                     l1206:
  1121     01BB  0820               	movf	send_Text@n,w
  1122     01BC  3EFF               	addlw	255
  1123     01BD  00A1               	movwf	??_send_Text
  1124     01BE  30FF               	movlw	255
  1125     01BF  1803               	skipnc
  1126     01C0  3000               	movlw	0
  1127     01C1  00A2               	movwf	??_send_Text+1
  1128     01C2  0822               	movf	??_send_Text+1,w
  1129     01C3  3A80               	xorlw	128
  1130     01C4  3C80               	sublw	128
  1131     01C5  1D03               	skipz
  1132     01C6  29C9               	goto	u265
  1133     01C7  0821               	movf	??_send_Text,w
  1134     01C8  0224               	subwf	send_Text@i,w
  1135     01C9                     u265:
  1136     01C9  1C03               	skipc
  1137     01CA  29CC               	goto	u261
  1138     01CB  29CD               	goto	u260
  1139     01CC                     u261:
  1140     01CC  29A4               	goto	l1200
  1141     01CD                     u260:
  1142     01CD                     l45:
  1143     01CD  0008               	return
  1144     01CE                     __end_of_send_Text:
  1145                           
  1146                           	psect	text3
  1147     0213                     __ptext3:	
  1148 ;; *************** function _reset_Lcd *****************
  1149 ;; Defined at:
  1150 ;;		line 85 in file "../XC8-template-lcd.X/lcd.c"
  1151 ;; Parameters:    Size  Location     Type
  1152 ;;		None
  1153 ;; Auto vars:     Size  Location     Type
  1154 ;;		None
  1155 ;; Return value:  Size  Location     Type
  1156 ;;                  1    wreg      void 
  1157 ;; Registers used:
  1158 ;;		wreg, status,2, status,0, pclath, cstack
  1159 ;; Tracked objects:
  1160 ;;		On entry : 0/0
  1161 ;;		On exit  : 0/0
  1162 ;;		Unchanged: 0/0
  1163 ;; Data sizes:     COMMON   BANK0   BANK1
  1164 ;;      Params:         0       0       0
  1165 ;;      Locals:         0       0       0
  1166 ;;      Temps:          0       2       0
  1167 ;;      Totals:         0       2       0
  1168 ;;Total ram usage:        2 bytes
  1169 ;; Hardware stack levels used: 1
  1170 ;; Hardware stack levels required when called: 3
  1171 ;; This function calls:
  1172 ;;		_send_Nibbles
  1173 ;; This function is called by:
  1174 ;;		_main
  1175 ;; This function uses a non-reentrant model
  1176 ;;
  1177                           
  1178     0213                     _reset_Lcd:	
  1179                           ;psect for function _reset_Lcd
  1180                           
  1181     0213                     l1208:	
  1182                           ;incstack = 0
  1183                           ; Regs used in _reset_Lcd: [wreg+status,2+status,0+pclath+cstack]
  1184                           
  1185     0213  01F5               	clrf	send_Nibbles@rs
  1186     0214  3001               	movlw	1
  1187     0215  21F3               	fcall	_send_Nibbles
  1188     0216                     l1210:
  1189                           
  1190                           ;../XC8-template-lcd.X/lcd.c: 87:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1191     0216  3003               	movlw	3
  1192     0217  1283               	bcf	3,5	;RP0=0, select bank0
  1193     0218  00A1               	movwf	??_reset_Lcd+1
  1194     0219  3097               	movlw	151
  1195     021A  00A0               	movwf	??_reset_Lcd
  1196     021B                     u367:
  1197     021B  0BA0               	decfsz	??_reset_Lcd,f
  1198     021C  2A1B               	goto	u367
  1199     021D  0BA1               	decfsz	??_reset_Lcd+1,f
  1200     021E  2A1B               	goto	u367
  1201     021F  0000               	nop
  1202     0220                     l1212:
  1203     0220  01F5               	clrf	send_Nibbles@rs
  1204     0221  3002               	movlw	2
  1205     0222  21F3               	fcall	_send_Nibbles
  1206                           
  1207                           ;../XC8-template-lcd.X/lcd.c: 89:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1208     0223  3003               	movlw	3
  1209     0224  1283               	bcf	3,5	;RP0=0, select bank0
  1210     0225  00A1               	movwf	??_reset_Lcd+1
  1211     0226  3097               	movlw	151
  1212     0227  00A0               	movwf	??_reset_Lcd
  1213     0228                     u377:
  1214     0228  0BA0               	decfsz	??_reset_Lcd,f
  1215     0229  2A28               	goto	u377
  1216     022A  0BA1               	decfsz	??_reset_Lcd+1,f
  1217     022B  2A28               	goto	u377
  1218     022C  0000               	nop
  1219     022D                     l48:
  1220     022D  0008               	return
  1221     022E                     __end_of_reset_Lcd:
  1222                           
  1223                           	psect	text4
  1224     0281                     __ptext4:	
  1225 ;; *************** function _readEEprom *****************
  1226 ;; Defined at:
  1227 ;;		line 71 in file "main.c"
  1228 ;; Parameters:    Size  Location     Type
  1229 ;;  addr            1    wreg     unsigned char 
  1230 ;; Auto vars:     Size  Location     Type
  1231 ;;  addr            1    2[COMMON] unsigned char 
  1232 ;; Return value:  Size  Location     Type
  1233 ;;                  1    wreg      unsigned char 
  1234 ;; Registers used:
  1235 ;;		wreg
  1236 ;; Tracked objects:
  1237 ;;		On entry : 0/0
  1238 ;;		On exit  : 0/0
  1239 ;;		Unchanged: 0/0
  1240 ;; Data sizes:     COMMON   BANK0   BANK1
  1241 ;;      Params:         0       0       0
  1242 ;;      Locals:         1       0       0
  1243 ;;      Temps:          0       0       0
  1244 ;;      Totals:         1       0       0
  1245 ;;Total ram usage:        1 bytes
  1246 ;; Hardware stack levels used: 1
  1247 ;; Hardware stack levels required when called: 1
  1248 ;; This function calls:
  1249 ;;		Nothing
  1250 ;; This function is called by:
  1251 ;;		_main
  1252 ;; This function uses a non-reentrant model
  1253 ;;
  1254                           
  1255     0281                     _readEEprom:	
  1256                           ;psect for function _readEEprom
  1257                           
  1258                           
  1259                           ;incstack = 0
  1260                           ; Regs used in _readEEprom: [wreg]
  1261                           ;readEEprom@addr stored from wreg
  1262     0281  00F2               	movwf	readEEprom@addr
  1263     0282                     l1050:
  1264                           
  1265                           ;main.c: 72:     EEADR = addr;
  1266     0282  0872               	movf	readEEprom@addr,w
  1267     0283  1683               	bsf	3,5	;RP0=1, select bank1
  1268     0284  009B               	movwf	27	;volatile
  1269     0285                     l1052:
  1270                           
  1271                           ;main.c: 74:     EECON1bits.RD = 1;
  1272     0285  141C               	bsf	28,0	;volsfr
  1273                           
  1274                           ;main.c: 76:     return EEDAT;
  1275     0286  081A               	movf	26,w	;volatile
  1276     0287                     l129:
  1277     0287  0008               	return
  1278     0288                     __end_of_readEEprom:
  1279                           
  1280                           	psect	text5
  1281     0242                     __ptext5:	
  1282 ;; *************** function _pos_Lcd *****************
  1283 ;; Defined at:
  1284 ;;		line 55 in file "../XC8-template-lcd.X/lcd.c"
  1285 ;; Parameters:    Size  Location     Type
  1286 ;;  x               1    wreg     unsigned char 
  1287 ;;  y               1    0[BANK0 ] unsigned char 
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;  x               1    2[BANK0 ] unsigned char 
  1290 ;;  pos             1    3[BANK0 ] unsigned char 
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  1    wreg      void 
  1293 ;; Registers used:
  1294 ;;		wreg, status,2, status,0, pclath, cstack
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMMON   BANK0   BANK1
  1300 ;;      Params:         0       1       0
  1301 ;;      Locals:         0       2       0
  1302 ;;      Temps:          0       1       0
  1303 ;;      Totals:         0       4       0
  1304 ;;Total ram usage:        4 bytes
  1305 ;; Hardware stack levels used: 1
  1306 ;; Hardware stack levels required when called: 3
  1307 ;; This function calls:
  1308 ;;		_send_Nibbles
  1309 ;; This function is called by:
  1310 ;;		_main
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314     0242                     _pos_Lcd:	
  1315                           ;psect for function _pos_Lcd
  1316                           
  1317                           
  1318                           ;incstack = 0
  1319                           ; Regs used in _pos_Lcd: [wreg+status,2+status,0+pclath+cstack]
  1320                           ;pos_Lcd@x stored from wreg
  1321     0242  1283               	bcf	3,5	;RP0=0, select bank0
  1322     0243  00A2               	movwf	pos_Lcd@x
  1323     0244                     l1190:
  1324                           
  1325                           ;../XC8-template-lcd.X/lcd.c: 56:     char pos = 127 + y;
  1326     0244  0820               	movf	pos_Lcd@y,w
  1327     0245  3E7F               	addlw	127
  1328     0246  00A3               	movwf	pos_Lcd@pos
  1329                           
  1330                           ;../XC8-template-lcd.X/lcd.c: 57:     if (x == 2) pos += 64;
  1331     0247  3002               	movlw	2
  1332     0248  0622               	xorwf	pos_Lcd@x,w
  1333     0249  1D03               	btfss	3,2
  1334     024A  2A4C               	goto	u251
  1335     024B  2A4D               	goto	u250
  1336     024C                     u251:
  1337     024C  2A51               	goto	l1194
  1338     024D                     u250:
  1339     024D                     l1192:
  1340     024D  3040               	movlw	64
  1341     024E  00A1               	movwf	??_pos_Lcd
  1342     024F  0821               	movf	??_pos_Lcd,w
  1343     0250  07A3               	addwf	pos_Lcd@pos,f
  1344     0251                     l1194:
  1345                           
  1346                           ;../XC8-template-lcd.X/lcd.c: 58:     send_Nibbles(pos, 0);
  1347     0251  01F5               	clrf	send_Nibbles@rs
  1348     0252  0823               	movf	pos_Lcd@pos,w
  1349     0253  21F3               	fcall	_send_Nibbles
  1350     0254                     l35:
  1351     0254  0008               	return
  1352     0255                     __end_of_pos_Lcd:
  1353                           
  1354                           	psect	text6
  1355     0268                     __ptext6:	
  1356 ;; *************** function _picInit *****************
  1357 ;; Defined at:
  1358 ;;		line 79 in file "main.c"
  1359 ;; Parameters:    Size  Location     Type
  1360 ;;		None
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;		None
  1363 ;; Return value:  Size  Location     Type
  1364 ;;                  1    wreg      void 
  1365 ;; Registers used:
  1366 ;;		wreg, status,2, status,0
  1367 ;; Tracked objects:
  1368 ;;		On entry : 0/0
  1369 ;;		On exit  : 0/0
  1370 ;;		Unchanged: 0/0
  1371 ;; Data sizes:     COMMON   BANK0   BANK1
  1372 ;;      Params:         0       0       0
  1373 ;;      Locals:         0       0       0
  1374 ;;      Temps:          0       0       0
  1375 ;;      Totals:         0       0       0
  1376 ;;Total ram usage:        0 bytes
  1377 ;; Hardware stack levels used: 1
  1378 ;; Hardware stack levels required when called: 1
  1379 ;; This function calls:
  1380 ;;		Nothing
  1381 ;; This function is called by:
  1382 ;;		_main
  1383 ;; This function uses a non-reentrant model
  1384 ;;
  1385                           
  1386     0268                     _picInit:	
  1387                           ;psect for function _picInit
  1388                           
  1389     0268                     l1056:	
  1390                           ;incstack = 0
  1391                           ; Regs used in _picInit: [wreg+status,2+status,0]
  1392                           
  1393                           
  1394                           ;main.c: 80:     OSCCONbits.IRCF = 0b110;
  1395     0268  1683               	bsf	3,5	;RP0=1, select bank1
  1396     0269  080F               	movf	15,w	;volatile
  1397     026A  398F               	andlw	-113
  1398     026B  3860               	iorlw	96
  1399     026C  008F               	movwf	15	;volatile
  1400     026D                     l1058:
  1401                           
  1402                           ;main.c: 81:     CMCON0 = 0b00000111;
  1403     026D  3007               	movlw	7
  1404     026E  1283               	bcf	3,5	;RP0=0, select bank0
  1405     026F  0099               	movwf	25	;volatile
  1406     0270                     l1060:
  1407                           
  1408                           ;main.c: 82:     ANSEL = 0x00;
  1409     0270  1683               	bsf	3,5	;RP0=1, select bank1
  1410     0271  019F               	clrf	31	;volatile
  1411     0272                     l1062:
  1412                           
  1413                           ;main.c: 83:     TRISIO = 0b00001100;
  1414     0272  300C               	movlw	12
  1415     0273  0085               	movwf	5	;volatile
  1416     0274                     l1064:
  1417                           
  1418                           ;main.c: 84:     GPIO = 0x00;
  1419     0274  1283               	bcf	3,5	;RP0=0, select bank0
  1420     0275  0185               	clrf	5	;volatile
  1421     0276                     l132:
  1422     0276  0008               	return
  1423     0277                     __end_of_picInit:
  1424                           
  1425                           	psect	text7
  1426     010D                     __ptext7:	
  1427 ;; *************** function _init_Lcd *****************
  1428 ;; Defined at:
  1429 ;;		line 14 in file "../XC8-template-lcd.X/lcd.c"
  1430 ;; Parameters:    Size  Location     Type
  1431 ;;		None
  1432 ;; Auto vars:     Size  Location     Type
  1433 ;;		None
  1434 ;; Return value:  Size  Location     Type
  1435 ;;                  1    wreg      void 
  1436 ;; Registers used:
  1437 ;;		wreg, status,2, status,0, pclath, cstack
  1438 ;; Tracked objects:
  1439 ;;		On entry : 0/0
  1440 ;;		On exit  : 0/0
  1441 ;;		Unchanged: 0/0
  1442 ;; Data sizes:     COMMON   BANK0   BANK1
  1443 ;;      Params:         0       0       0
  1444 ;;      Locals:         0       0       0
  1445 ;;      Temps:          0       2       0
  1446 ;;      Totals:         0       2       0
  1447 ;;Total ram usage:        2 bytes
  1448 ;; Hardware stack levels used: 1
  1449 ;; Hardware stack levels required when called: 3
  1450 ;; This function calls:
  1451 ;;		_do_Lcd
  1452 ;;		_do_Shiftr
  1453 ;;		_send_Nibbles
  1454 ;; This function is called by:
  1455 ;;		_main
  1456 ;; This function uses a non-reentrant model
  1457 ;;
  1458                           
  1459     010D                     _init_Lcd:	
  1460                           ;psect for function _init_Lcd
  1461                           
  1462     010D                     l1168:	
  1463                           ;incstack = 0
  1464                           ; Regs used in _init_Lcd: [wreg+status,2+status,0+pclath+cstack]
  1465                           
  1466                           
  1467                           ;../XC8-template-lcd.X/lcd.c: 15:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1468     010D  3082               	movlw	130
  1469     010E  1283               	bcf	3,5	;RP0=0, select bank0
  1470     010F  00A1               	movwf	??_init_Lcd+1
  1471     0110  30DD               	movlw	221
  1472     0111  00A0               	movwf	??_init_Lcd
  1473     0112                     u387:
  1474     0112  0BA0               	decfsz	??_init_Lcd,f
  1475     0113  2912               	goto	u387
  1476     0114  0BA1               	decfsz	??_init_Lcd+1,f
  1477     0115  2912               	goto	u387
  1478     0116  0000               	nop
  1479     0117                     l1170:
  1480                           
  1481                           ;../XC8-template-lcd.X/lcd.c: 16:     do_Shiftr(0x00);
  1482     0117  3000               	movlw	0
  1483     0118  21CE               	fcall	_do_Shiftr
  1484                           
  1485                           ;../XC8-template-lcd.X/lcd.c: 17:     do_Lcd();
  1486     0119  2277               	fcall	_do_Lcd
  1487     011A                     l1172:
  1488                           
  1489                           ;../XC8-template-lcd.X/lcd.c: 18:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1490     011A  3003               	movlw	3
  1491     011B  1283               	bcf	3,5	;RP0=0, select bank0
  1492     011C  00A1               	movwf	??_init_Lcd+1
  1493     011D  3097               	movlw	151
  1494     011E  00A0               	movwf	??_init_Lcd
  1495     011F                     u397:
  1496     011F  0BA0               	decfsz	??_init_Lcd,f
  1497     0120  291F               	goto	u397
  1498     0121  0BA1               	decfsz	??_init_Lcd+1,f
  1499     0122  291F               	goto	u397
  1500     0123  0000               	nop
  1501     0124  3002               	movlw	2
  1502     0125  21CE               	fcall	_do_Shiftr
  1503     0126                     l1174:
  1504                           
  1505                           ;../XC8-template-lcd.X/lcd.c: 20:     do_Lcd();
  1506     0126  2277               	fcall	_do_Lcd
  1507                           
  1508                           ;../XC8-template-lcd.X/lcd.c: 21:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1509     0127  3010               	movlw	16
  1510     0128  1283               	bcf	3,5	;RP0=0, select bank0
  1511     0129  00A0               	movwf	??_init_Lcd
  1512     012A                     u407:
  1513     012A  0BA0               	decfsz	??_init_Lcd,f
  1514     012B  292A               	goto	u407
  1515     012C                     l1176:
  1516     012C  01F5               	clrf	send_Nibbles@rs
  1517     012D  3028               	movlw	40
  1518     012E  21F3               	fcall	_send_Nibbles
  1519     012F                     l1178:
  1520                           
  1521                           ;../XC8-template-lcd.X/lcd.c: 23:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1522     012F  3010               	movlw	16
  1523     0130  1283               	bcf	3,5	;RP0=0, select bank0
  1524     0131  00A0               	movwf	??_init_Lcd
  1525     0132                     u417:
  1526     0132  0BA0               	decfsz	??_init_Lcd,f
  1527     0133  2932               	goto	u417
  1528     0134  01F5               	clrf	send_Nibbles@rs
  1529     0135  300E               	movlw	14
  1530     0136  21F3               	fcall	_send_Nibbles
  1531     0137                     l1180:
  1532                           
  1533                           ;../XC8-template-lcd.X/lcd.c: 25:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1534     0137  3010               	movlw	16
  1535     0138  1283               	bcf	3,5	;RP0=0, select bank0
  1536     0139  00A0               	movwf	??_init_Lcd
  1537     013A                     u427:
  1538     013A  0BA0               	decfsz	??_init_Lcd,f
  1539     013B  293A               	goto	u427
  1540     013C                     l1182:
  1541     013C  01F5               	clrf	send_Nibbles@rs
  1542     013D  3001               	movlw	1
  1543     013E  21F3               	fcall	_send_Nibbles
  1544                           
  1545                           ;../XC8-template-lcd.X/lcd.c: 27:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1546     013F  3003               	movlw	3
  1547     0140  1283               	bcf	3,5	;RP0=0, select bank0
  1548     0141  00A1               	movwf	??_init_Lcd+1
  1549     0142  3097               	movlw	151
  1550     0143  00A0               	movwf	??_init_Lcd
  1551     0144                     u437:
  1552     0144  0BA0               	decfsz	??_init_Lcd,f
  1553     0145  2944               	goto	u437
  1554     0146  0BA1               	decfsz	??_init_Lcd+1,f
  1555     0147  2944               	goto	u437
  1556     0148  0000               	nop
  1557     0149                     l1184:
  1558     0149  01F5               	clrf	send_Nibbles@rs
  1559     014A  3002               	movlw	2
  1560     014B  21F3               	fcall	_send_Nibbles
  1561     014C                     l1186:
  1562                           
  1563                           ;../XC8-template-lcd.X/lcd.c: 29:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1564     014C  3003               	movlw	3
  1565     014D  1283               	bcf	3,5	;RP0=0, select bank0
  1566     014E  00A1               	movwf	??_init_Lcd+1
  1567     014F  3097               	movlw	151
  1568     0150  00A0               	movwf	??_init_Lcd
  1569     0151                     u447:
  1570     0151  0BA0               	decfsz	??_init_Lcd,f
  1571     0152  2951               	goto	u447
  1572     0153  0BA1               	decfsz	??_init_Lcd+1,f
  1573     0154  2951               	goto	u447
  1574     0155  0000               	nop
  1575     0156                     l23:
  1576     0156  0008               	return
  1577     0157                     __end_of_init_Lcd:
  1578                           
  1579                           	psect	text8
  1580     01F3                     __ptext8:	
  1581 ;; *************** function _send_Nibbles *****************
  1582 ;; Defined at:
  1583 ;;		line 62 in file "../XC8-template-lcd.X/lcd.c"
  1584 ;; Parameters:    Size  Location     Type
  1585 ;;  data            1    wreg     unsigned char 
  1586 ;;  rs              1    5[COMMON] _Bool 
  1587 ;; Auto vars:     Size  Location     Type
  1588 ;;  data            1    7[COMMON] unsigned char 
  1589 ;;  hiB             1    9[COMMON] unsigned char 
  1590 ;;  lowB            1    8[COMMON] unsigned char 
  1591 ;;  mask            1    0        unsigned char 
  1592 ;; Return value:  Size  Location     Type
  1593 ;;                  1    wreg      void 
  1594 ;; Registers used:
  1595 ;;		wreg, status,2, status,0, pclath, cstack
  1596 ;; Tracked objects:
  1597 ;;		On entry : 0/0
  1598 ;;		On exit  : 0/0
  1599 ;;		Unchanged: 0/0
  1600 ;; Data sizes:     COMMON   BANK0   BANK1
  1601 ;;      Params:         1       0       0
  1602 ;;      Locals:         3       0       0
  1603 ;;      Temps:          1       0       0
  1604 ;;      Totals:         5       0       0
  1605 ;;Total ram usage:        5 bytes
  1606 ;; Hardware stack levels used: 1
  1607 ;; Hardware stack levels required when called: 2
  1608 ;; This function calls:
  1609 ;;		_do_Lcd
  1610 ;;		_do_Shiftr
  1611 ;; This function is called by:
  1612 ;;		_init_Lcd
  1613 ;;		_pos_Lcd
  1614 ;;		_send_Text
  1615 ;;		_reset_Lcd
  1616 ;;		_main
  1617 ;; This function uses a non-reentrant model
  1618 ;;
  1619                           
  1620     01F3                     _send_Nibbles:	
  1621                           ;psect for function _send_Nibbles
  1622                           
  1623                           
  1624                           ;incstack = 0
  1625                           ; Regs used in _send_Nibbles: [wreg+status,2+status,0+pclath+cstack]
  1626                           ;send_Nibbles@data stored from wreg
  1627     01F3  00F7               	movwf	send_Nibbles@data
  1628     01F4                     l978:
  1629     01F4                     l980:
  1630                           
  1631                           ;../XC8-template-lcd.X/lcd.c: 64:     hiB = data >> 4;
  1632     01F4  0877               	movf	send_Nibbles@data,w
  1633     01F5  00F6               	movwf	??_send_Nibbles
  1634     01F6  3004               	movlw	4
  1635     01F7                     u175:
  1636     01F7  1003               	clrc
  1637     01F8  0CF6               	rrf	??_send_Nibbles,f
  1638     01F9  3EFF               	addlw	-1
  1639     01FA  1D03               	skipz
  1640     01FB  29F7               	goto	u175
  1641     01FC  0876               	movf	??_send_Nibbles,w
  1642     01FD  00F9               	movwf	send_Nibbles@hiB
  1643     01FE                     l982:
  1644                           
  1645                           ;../XC8-template-lcd.X/lcd.c: 65:     lowB = data & 0x0F;
  1646     01FE  0877               	movf	send_Nibbles@data,w
  1647     01FF  390F               	andlw	15
  1648     0200  00F8               	movwf	send_Nibbles@lowB
  1649     0201                     l984:
  1650                           
  1651                           ;../XC8-template-lcd.X/lcd.c: 66:     if (rs) {
  1652     0201  0875               	movf	send_Nibbles@rs,w
  1653     0202  1903               	btfsc	3,2
  1654     0203  2A05               	goto	u181
  1655     0204  2A06               	goto	u180
  1656     0205                     u181:
  1657     0205  2A0C               	goto	l988
  1658     0206                     u180:
  1659     0206                     l986:
  1660                           
  1661                           ;../XC8-template-lcd.X/lcd.c: 67:         hiB = hiB | mask;
  1662     0206  0879               	movf	send_Nibbles@hiB,w
  1663     0207  3810               	iorlw	16
  1664     0208  00F9               	movwf	send_Nibbles@hiB
  1665                           
  1666                           ;../XC8-template-lcd.X/lcd.c: 68:         lowB = lowB | mask;
  1667     0209  0878               	movf	send_Nibbles@lowB,w
  1668     020A  3810               	iorlw	16
  1669     020B  00F8               	movwf	send_Nibbles@lowB
  1670     020C                     l988:
  1671                           
  1672                           ;../XC8-template-lcd.X/lcd.c: 70:     do_Shiftr(hiB);
  1673     020C  0879               	movf	send_Nibbles@hiB,w
  1674     020D  21CE               	fcall	_do_Shiftr
  1675     020E                     l990:
  1676                           
  1677                           ;../XC8-template-lcd.X/lcd.c: 71:     do_Lcd();
  1678     020E  2277               	fcall	_do_Lcd
  1679     020F                     l992:
  1680                           
  1681                           ;../XC8-template-lcd.X/lcd.c: 72:     do_Shiftr(lowB);
  1682     020F  0878               	movf	send_Nibbles@lowB,w
  1683     0210  21CE               	fcall	_do_Shiftr
  1684     0211                     l994:
  1685                           
  1686                           ;../XC8-template-lcd.X/lcd.c: 73:     do_Lcd();
  1687     0211  2277               	fcall	_do_Lcd
  1688     0212                     l39:
  1689     0212  0008               	return
  1690     0213                     __end_of_send_Nibbles:
  1691                           
  1692                           	psect	text9
  1693     01CE                     __ptext9:	
  1694 ;; *************** function _do_Shiftr *****************
  1695 ;; Defined at:
  1696 ;;		line 42 in file "../XC8-template-lcd.X/lcd.c"
  1697 ;; Parameters:    Size  Location     Type
  1698 ;;  value           1    wreg     unsigned char 
  1699 ;; Auto vars:     Size  Location     Type
  1700 ;;  value           1    3[COMMON] unsigned char 
  1701 ;;  i               1    4[COMMON] unsigned char 
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  1    wreg      void 
  1704 ;; Registers used:
  1705 ;;		wreg, status,2, status,0
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMMON   BANK0   BANK1
  1711 ;;      Params:         0       0       0
  1712 ;;      Locals:         2       0       0
  1713 ;;      Temps:          1       0       0
  1714 ;;      Totals:         3       0       0
  1715 ;;Total ram usage:        3 bytes
  1716 ;; Hardware stack levels used: 1
  1717 ;; Hardware stack levels required when called: 1
  1718 ;; This function calls:
  1719 ;;		Nothing
  1720 ;; This function is called by:
  1721 ;;		_init_Lcd
  1722 ;;		_send_Nibbles
  1723 ;; This function uses a non-reentrant model
  1724 ;;
  1725                           
  1726     01CE                     _do_Shiftr:	
  1727                           ;psect for function _do_Shiftr
  1728                           
  1729                           
  1730                           ;incstack = 0
  1731                           ; Regs used in _do_Shiftr: [wreg+status,2+status,0]
  1732                           ;do_Shiftr@value stored from wreg
  1733     01CE  00F3               	movwf	do_Shiftr@value
  1734     01CF                     l956:
  1735                           
  1736                           ;../XC8-template-lcd.X/lcd.c: 43:     for (char i = 0; i < 8; i++) {
  1737     01CF  01F4               	clrf	do_Shiftr@i
  1738     01D0                     l29:
  1739                           
  1740                           ;../XC8-template-lcd.X/lcd.c: 44:         GPIObits.GP0 = (value & 0x80) ? 1 : 0;
  1741     01D0  1BF3               	btfsc	do_Shiftr@value,7
  1742     01D1  29D3               	goto	u141
  1743     01D2  29D6               	goto	u140
  1744     01D3                     u141:
  1745     01D3  1283               	bcf	3,5	;RP0=0, select bank0
  1746     01D4  1405               	bsf	5,0	;volatile
  1747     01D5  29D8               	goto	u154
  1748     01D6                     u140:
  1749     01D6  1283               	bcf	3,5	;RP0=0, select bank0
  1750     01D7  1005               	bcf	5,0	;volatile
  1751     01D8                     u154:
  1752     01D8                     l962:
  1753                           
  1754                           ;../XC8-template-lcd.X/lcd.c: 45:         value <<= 1;
  1755     01D8  1003               	clrc
  1756     01D9  0DF3               	rlf	do_Shiftr@value,f
  1757                           
  1758                           ;../XC8-template-lcd.X/lcd.c: 46:         _delay((unsigned long)((10)*(4000000/4000000.0
      +                          )));
  1759     01DA  3003               	movlw	3
  1760     01DB  00F2               	movwf	??_do_Shiftr
  1761     01DC                     u457:
  1762     01DC  0BF2               	decfsz	??_do_Shiftr,f
  1763     01DD  29DC               	goto	u457
  1764     01DE                     l964:
  1765                           
  1766                           ;../XC8-template-lcd.X/lcd.c: 47:         GPIObits.GP1 = 1;
  1767     01DE  1283               	bcf	3,5	;RP0=0, select bank0
  1768     01DF  1485               	bsf	5,1	;volatile
  1769     01E0                     l966:
  1770                           
  1771                           ;../XC8-template-lcd.X/lcd.c: 48:         _delay((unsigned long)((5)*(4000000/4000000.0)
      +                          ));
  1772     01E0  29E1               	nop2	;2 cycle nop
  1773     01E1  29E2               	nop2	;2 cycle nop
  1774     01E2  0000               	nop
  1775     01E3                     l968:
  1776                           
  1777                           ;../XC8-template-lcd.X/lcd.c: 49:         GPIObits.GP1 = 0;
  1778     01E3  1283               	bcf	3,5	;RP0=0, select bank0
  1779     01E4  1085               	bcf	5,1	;volatile
  1780     01E5                     l970:
  1781                           
  1782                           ;../XC8-template-lcd.X/lcd.c: 50:         _delay((unsigned long)((5)*(4000000/4000000.0)
      +                          ));
  1783     01E5  29E6               	nop2	;2 cycle nop
  1784     01E6  29E7               	nop2	;2 cycle nop
  1785     01E7  0000               	nop
  1786     01E8                     l972:
  1787                           
  1788                           ;../XC8-template-lcd.X/lcd.c: 51:     }
  1789     01E8  3001               	movlw	1
  1790     01E9  00F2               	movwf	??_do_Shiftr
  1791     01EA  0872               	movf	??_do_Shiftr,w
  1792     01EB  07F4               	addwf	do_Shiftr@i,f
  1793     01EC                     l974:
  1794     01EC  3008               	movlw	8
  1795     01ED  0274               	subwf	do_Shiftr@i,w
  1796     01EE  1C03               	skipc
  1797     01EF  29F1               	goto	u161
  1798     01F0  29F2               	goto	u160
  1799     01F1                     u161:
  1800     01F1  29D0               	goto	l29
  1801     01F2                     u160:
  1802     01F2                     l31:
  1803     01F2  0008               	return
  1804     01F3                     __end_of_do_Shiftr:
  1805                           
  1806                           	psect	text10
  1807     0277                     __ptext10:	
  1808 ;; *************** function _do_Lcd *****************
  1809 ;; Defined at:
  1810 ;;		line 33 in file "../XC8-template-lcd.X/lcd.c"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;		None
  1813 ;; Auto vars:     Size  Location     Type
  1814 ;;		None
  1815 ;; Return value:  Size  Location     Type
  1816 ;;                  1    wreg      void 
  1817 ;; Registers used:
  1818 ;;		None
  1819 ;; Tracked objects:
  1820 ;;		On entry : 0/0
  1821 ;;		On exit  : 0/0
  1822 ;;		Unchanged: 0/0
  1823 ;; Data sizes:     COMMON   BANK0   BANK1
  1824 ;;      Params:         0       0       0
  1825 ;;      Locals:         0       0       0
  1826 ;;      Temps:          0       0       0
  1827 ;;      Totals:         0       0       0
  1828 ;;Total ram usage:        0 bytes
  1829 ;; Hardware stack levels used: 1
  1830 ;; Hardware stack levels required when called: 1
  1831 ;; This function calls:
  1832 ;;		Nothing
  1833 ;; This function is called by:
  1834 ;;		_init_Lcd
  1835 ;;		_send_Nibbles
  1836 ;; This function uses a non-reentrant model
  1837 ;;
  1838                           
  1839     0277                     _do_Lcd:	
  1840                           ;psect for function _do_Lcd
  1841                           
  1842     0277                     l976:	
  1843                           ;incstack = 0
  1844                           ; Regs used in _do_Lcd: []
  1845                           
  1846                           
  1847                           ;../XC8-template-lcd.X/lcd.c: 34:     _delay((unsigned long)((1)*(4000000/4000000.0)));
  1848     0277  0000               	nop
  1849                           
  1850                           ;../XC8-template-lcd.X/lcd.c: 35:     GPIObits.GP5 = 1;
  1851     0278  1283               	bcf	3,5	;RP0=0, select bank0
  1852     0279  1685               	bsf	5,5	;volatile
  1853                           
  1854                           ;../XC8-template-lcd.X/lcd.c: 36:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  1855     027A  2A7B               	nop2	;2 cycle nop
  1856     027B  2A7C               	nop2	;2 cycle nop
  1857     027C  0000               	nop
  1858                           
  1859                           ;../XC8-template-lcd.X/lcd.c: 37:     GPIObits.GP5 = 0;
  1860     027D  1283               	bcf	3,5	;RP0=0, select bank0
  1861     027E  1285               	bcf	5,5	;volatile
  1862                           
  1863                           ;../XC8-template-lcd.X/lcd.c: 38:     _delay((unsigned long)((1)*(4000000/4000000.0)));
  1864     027F  0000               	nop
  1865     0280                     l26:	
  1866                           ;../XC8-template-lcd.X/lcd.c: 39:     return;
  1867                           
  1868     0280  0008               	return
  1869     0281                     __end_of_do_Lcd:
  1870                           
  1871                           	psect	text11
  1872     0255                     __ptext11:	
  1873 ;; *************** function _isr *****************
  1874 ;; Defined at:
  1875 ;;		line 47 in file "main.c"
  1876 ;; Parameters:    Size  Location     Type
  1877 ;;		None
  1878 ;; Auto vars:     Size  Location     Type
  1879 ;;		None
  1880 ;; Return value:  Size  Location     Type
  1881 ;;                  1    wreg      void 
  1882 ;; Registers used:
  1883 ;;		None
  1884 ;; Tracked objects:
  1885 ;;		On entry : 0/0
  1886 ;;		On exit  : 0/0
  1887 ;;		Unchanged: 0/0
  1888 ;; Data sizes:     COMMON   BANK0   BANK1
  1889 ;;      Params:         0       0       0
  1890 ;;      Locals:         0       0       0
  1891 ;;      Temps:          2       0       0
  1892 ;;      Totals:         2       0       0
  1893 ;;Total ram usage:        2 bytes
  1894 ;; Hardware stack levels used: 1
  1895 ;; This function calls:
  1896 ;;		Nothing
  1897 ;; This function is called by:
  1898 ;;		Interrupt level 1
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           
  1902     0255                     _isr:	
  1903                           ;psect for function _isr
  1904                           
  1905     0255                     i1l850:
  1906                           
  1907                           ;main.c: 49:     if (PIE1bits.EEIE && PIR1bits.EEIF) {
  1908     0255  1683               	bsf	3,5	;RP0=1, select bank1
  1909     0256  1F8C               	btfss	12,7	;volatile
  1910     0257  2A59               	goto	u9_21
  1911     0258  2A5A               	goto	u9_20
  1912     0259                     u9_21:
  1913     0259  2A61               	goto	i1l120
  1914     025A                     u9_20:
  1915     025A                     i1l852:
  1916     025A  1283               	bcf	3,5	;RP0=0, select bank0
  1917     025B  1F8C               	btfss	12,7	;volatile
  1918     025C  2A5E               	goto	u10_21
  1919     025D  2A5F               	goto	u10_20
  1920     025E                     u10_21:
  1921     025E  2A61               	goto	i1l120
  1922     025F                     u10_20:
  1923     025F                     i1l854:
  1924                           
  1925                           ;main.c: 50:         PIR1bits.EEIF = 0;
  1926     025F  138C               	bcf	12,7	;volatile
  1927                           
  1928                           ;main.c: 51:         EEFLAG = 1;
  1929     0260  147A               	bsf	_EEFLAG/(0+8),_EEFLAG& (0+7)
  1930     0261                     i1l120:	
  1931                           ;main.c: 52:         return;
  1932                           
  1933     0261  0871               	movf	??_isr+1,w
  1934     0262  008A               	movwf	10
  1935     0263  0E70               	swapf	??_isr,w
  1936     0264  0083               	movwf	3
  1937     0265  0EFE               	swapf	btemp,f
  1938     0266  0E7E               	swapf	btemp,w
  1939     0267  0009               	retfie
  1940     0268                     __end_of_isr:
  1941     007E                     btemp	set	126	;btemp
  1942     007E                     wtemp0	set	126
  1943                           
  1944                           	psect	intentry
  1945     0004                     __pintentry:	
  1946                           ;incstack = 0
  1947                           ; Regs used in _isr: []
  1948                           
  1949     0004                     interrupt_function:
  1950     007E                     saved_w	set	btemp
  1951     0004  00FE               	movwf	btemp
  1952     0005  0E03               	swapf	3,w
  1953     0006  00F0               	movwf	??_isr
  1954     0007  080A               	movf	10,w
  1955     0008  00F1               	movwf	??_isr+1
  1956     0009  2A55               	ljmp	_isr
  1957                           
  1958                           	psect	idloc
  1959                           
  1960                           ;Config register IDLOC0 @ 0x2000
  1961                           ;	unspecified, using default values
  1962     2000                     	org	8192
  1963     2000  3FFF               	dw	16383
  1964                           
  1965                           ;Config register IDLOC1 @ 0x2001
  1966                           ;	unspecified, using default values
  1967     2001                     	org	8193
  1968     2001  3FFF               	dw	16383
  1969                           
  1970                           ;Config register IDLOC2 @ 0x2002
  1971                           ;	unspecified, using default values
  1972     2002                     	org	8194
  1973     2002  3FFF               	dw	16383
  1974                           
  1975                           ;Config register IDLOC3 @ 0x2003
  1976                           ;	unspecified, using default values
  1977     2003                     	org	8195
  1978     2003  3FFF               	dw	16383
  1979                           
  1980                           	psect	config
  1981                           
  1982                           ;Config register CONFIG @ 0x2007
  1983                           ;	Oscillator Selection bits
  1984                           ;	FOSC = INTOSCIO, INTOSCIO oscillator: I/O function on RA4/OSC2/CLKOUT pin, I/O functio
      +                          n on RA5/OSC1/CLKIN
  1985                           ;	Watchdog Timer Enable bit
  1986                           ;	WDTE = OFF, WDT disabled
  1987                           ;	Power-up Timer Enable bit
  1988                           ;	PWRTE = ON, PWRT enabled
  1989                           ;	MCLR Pin Function Select bit
  1990                           ;	MCLRE = OFF, MCLR pin function is digital input, MCLR internally tied to VDD
  1991                           ;	Code Protection bit
  1992                           ;	CP = OFF, Program memory code protection is disabled
  1993                           ;	Data Code Protection bit
  1994                           ;	CPD = OFF, Data memory code protection is disabled
  1995                           ;	Brown Out Detect
  1996                           ;	BOREN = OFF, BOR disabled
  1997                           ;	Internal External Switchover bit
  1998                           ;	IESO = OFF, Internal External Switchover mode is disabled
  1999                           ;	Fail-Safe Clock Monitor Enabled bit
  2000                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2001     2007                     	org	8199
  2002     2007  30C4               	dw	12484

Data Sizes:
    Strings     0
    Constant    67
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     12      13
    BANK1            32      0       0

Pointer List with Targets:

    send_Text@s	PTR const unsigned char  size(1) Largest target is 18
		 -> myText5(CODE[8]), myText4(CODE[11]), myText3(CODE[12]), myText2(CODE[13]), 
		 -> myText1(CODE[18]), 


Critical Paths under _main in COMMON

    _main->_send_Nibbles
    _send_Text->_send_Nibbles
    _reset_Lcd->_send_Nibbles
    _pos_Lcd->_send_Nibbles
    _init_Lcd->_send_Nibbles
    _send_Nibbles->_do_Shiftr

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_send_Text

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0    7532
                                              5 BANK0      7     7      0
                           _init_Lcd
                            _picInit
                            _pos_Lcd
                         _readEEprom
                          _reset_Lcd
                       _send_Nibbles
                          _send_Text
                        _writeEEprom
 ---------------------------------------------------------------------------------
 (1) _writeEEprom                                          2     1      1     196
                                              2 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _send_Text                                            5     4      1    1868
                                              0 BANK0      5     4      1
                       _send_Nibbles
 ---------------------------------------------------------------------------------
 (1) _reset_Lcd                                            2     2      0    1108
                                              0 BANK0      2     2      0
                       _send_Nibbles
 ---------------------------------------------------------------------------------
 (1) _readEEprom                                           1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _pos_Lcd                                              4     3      1    1657
                                              0 BANK0      4     3      1
                       _send_Nibbles
 ---------------------------------------------------------------------------------
 (1) _picInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_Lcd                                             2     2      0    1177
                                              0 BANK0      2     2      0
                             _do_Lcd
                          _do_Shiftr
                       _send_Nibbles
 ---------------------------------------------------------------------------------
 (2) _send_Nibbles                                         6     5      1    1108
                                              5 COMMON     5     4      1
                             _do_Lcd
                          _do_Shiftr
 ---------------------------------------------------------------------------------
 (3) _do_Shiftr                                            3     3      0      69
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _do_Lcd                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_Lcd
     _do_Lcd
     _do_Shiftr
     _send_Nibbles
       _do_Lcd
       _do_Shiftr
   _picInit
   _pos_Lcd
     _send_Nibbles
   _readEEprom
   _reset_Lcd
     _send_Nibbles
   _send_Nibbles
   _send_Text
     _send_Nibbles
   _writeEEprom

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       1       0        7.1%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50      C       D       4       16.2%
BANK1               20      0       0       5        0.0%
ABS                  0      0      19       6        0.0%
BITBANK1            20      0       0       7        0.0%
DATA                 0      0      19       8        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Oct 18 17:06:46 2024

                      pc 0002                       _B0 007B                       _B1 002C  
                     l31 01F2                       l23 0156                       l26 0280  
                     l35 0254                       l29 01D0                       l45 01CD  
                     l39 0212                       l48 022D                       fsr 0004  
                    l123 0239                      l132 0276                      l125 023E  
                    l126 0241                      l129 0287                      l970 01E5  
                    l962 01D8                      l972 01E8                      l964 01DE  
                    l956 01CF                      l980 01F4                      l974 01EC  
                    l966 01E0                      l990 020E                      l982 01FE  
                    l976 0277                      l968 01E3                      l992 020F  
                    l984 0201                      l994 0211                      l986 0206  
                    l978 01F4                      l988 020C                      u210 023E  
                    u211 023D                      u140 01D6                      u141 01D3  
                    u160 01F2                      u161 01F1                      u154 01D8  
                    u250 024D                      u251 024C                      u307 001D  
                    u180 0206                      u260 01CD                      u181 0205  
                    u261 01CC                      u317 0049                      u270 005F  
                    u175 01F7                      u407 012A                      u327 0089  
                    u271 005E                      u280 009B                      u417 0132  
                    u265 01C9                      u337 00C8                      u281 009A  
                    u290 00DA                      u427 013A                      u347 0104  
                    u291 00D9                      u437 0144                      u357 01B1  
                    u447 0151                      u367 021B                      u457 01DC  
                    u377 0228                      u387 0112                      u397 011F  
                    _isr 0255                      fsr0 0004                     l1200 01A4  
                   l1050 0282                     l1210 0216                     l1202 01AC  
                   l1060 0270                     l1052 0285                     l1212 0220  
                   l1204 01B6                     l1300 00E5                     l1220 0018  
                   l1062 0272                     l1206 01BB                     l1046 022F  
                   l1310 00F3                     l1302 00E7                     l1222 0021  
                   l1064 0274                     l1056 0268                     l1208 0213  
                   l1048 0238                     l1312 00F8                     l1304 00E8  
                   l1240 0050                     l1224 0022                     l1216 0011  
                   l1170 0117                     l1058 026D                     l1314 00FD  
                   l1306 00E9                     l1250 006C                     l1242 0055  
                   l1234 0028                     l1226 0024                     l1218 0013  
                   l1180 0137                     l1172 011A                     l1308 00EE  
                   l1252 006D                     l1244 0059                     l1236 0036  
                   l1228 0026                     l1182 013C                     l1174 0126  
                   l1190 0244                     l1270 0090                     l1262 0075  
                   l1254 006E                     l1246 005F                     l1238 0042  
                   l1184 0149                     l1176 012C                     l1168 010D  
                   l1192 024D                     l1280 00A2                     l1272 0095  
                   l1264 0079                     l1256 0073                     l1248 006A  
                   l1186 014C                     l1178 012F                     l1194 0251  
                   l1290 00B5                     l1282 00A4                     l1274 009B  
                   l1266 007D                     l1292 00C1                     l1276 009C  
                   l1268 0082                     l1198 01A2                     l1294 00CF  
                   l1278 00A1                     l1296 00D4                     l1288 00A6  
                   l1298 00DA                     ?_isr 0070                     _GPIO 0005  
                   u9_20 025A                     u9_21 0259                     _main 0011  
                   btemp 007E                     start 000A              _writeEEprom 022E  
                  ??_isr 0070                    ?_main 0070                    _EEADR 009B  
                  _EEDAT 009A                    _ANSEL 009F                    i1l120 0261  
                  i1l850 0255                    i1l852 025A                    i1l854 025F  
                  u10_20 025F                    u10_21 025E          __end_of_lcdHome 0160  
        __end_of_lcdFunc 015E          __end_of_picInit 0277                    main@i 0028  
        __end_of_myText1 0174          __end_of_myText2 0181          __end_of_myText3 018D  
        __end_of_myText4 0198          __end_of_myText5 01A0           __pbitbssCOMMON 03D0  
        __end_of_pos_Lcd 0255                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000B             __end_of_main 010D  
                 ??_main 0025         send_Nibbles@data 0077         send_Nibbles@lowB 0078  
                 _EECON2 009D                   _EEFLAG 03D0                   _CMCON0 0019  
                 _TRISIO 0085         __end_of_lcd4bits 0162           readEEprom@addr 0072  
       __end_of_lcdClear 0161                   _do_Lcd 0277                   _lcdCon 015E  
       __end_of_init_Lcd 0157                   main@B0 002A                ??_picInit 0072  
                 saved_w 007E                ??_pos_Lcd 0021  __end_of__initialization 000F  
         __pcstackCOMMON 0070               __pbssBANK0 002C            ?_send_Nibbles 0075  
             __pmaintext 0011                  ?_do_Lcd 0070             ?_writeEEprom 0072  
             __pintentry 0004           ??_send_Nibbles 0076               __stringtab 0157  
      __end_of_do_Shiftr 01F3                ?_init_Lcd 0070               _readEEprom 0281  
                _lcdHome 015F                  _lcdFunc 015D                  __ptext1 022E  
                __ptext2 01A0                  __ptext3 0213                  __ptext4 0281  
                __ptext5 0242                  __ptext6 0268                  __ptext7 010D  
                __ptext8 01F3                  __ptext9 01CE                  _picInit 0268  
                _myText1 0162                  _myText2 0174                  _myText3 0181  
                _myText4 018D                  _myText5 0198               do_Shiftr@i 0074  
                _pos_Lcd 0242     end_of_initialization 000F        __end_of_send_Text 01CE  
             ??_init_Lcd 0020        __end_of_reset_Lcd 022E          writeEEprom@addr 0073  
        writeEEprom@data 0072              ?_readEEprom 0070     __end_of_send_Nibbles 0213  
         __end_of_do_Lcd 0281           __end_of_lcdCon 015F      start_initialization 000B  
            __end_of_isr 0268          send_Nibbles@hiB 0079                 ??_do_Lcd 0072  
            __pbssCOMMON 007B                ___latbits 0000            __pcstackBANK0 0020  
              _do_Shiftr 01CE               send_Text@i 0024               send_Text@n 0020  
             send_Text@s 0023                __pstrings 0157                 ?_picInit 0070  
               ?_pos_Lcd 0020               pos_Lcd@pos 0023        interrupt_function 0004  
               _GPIObits 0005                _send_Text 01A0                 _PIE1bits 008C  
             ?_do_Shiftr 0070                _reset_Lcd 0213                 _PIR1bits 000C  
            __stringbase 015C                main@i_316 0029                main@i_318 002B  
           _send_Nibbles 01F3               ?_send_Text 0020               _EECON1bits 009C  
         send_Nibbles@rs 0075             ??_readEEprom 0072               ?_reset_Lcd 0070  
     __end_of__stringtab 015D                 _lcd4bits 0161                 _lcdClear 0160  
     __end_of_readEEprom 0288                 __ptext10 0277                 __ptext11 0255  
               _init_Lcd 010D              ??_do_Shiftr 0072            ??_writeEEprom 0073  
             _INTCONbits 000B           do_Shiftr@value 0073                 intlevel1 0000  
            ??_send_Text 0021                 pos_Lcd@x 0022                 pos_Lcd@y 0020  
              stringcode 0157              ??_reset_Lcd 0020               _OSCCONbits 008F  
    __end_of_writeEEprom 0242                 stringdir 0157                 stringtab 0157  
